apiVersion: v1
data:
  appservice-registration-irc.yaml: |-
    id: 4ec4e898d92cf0ca0389b3c2e5f57e71381e307ffd8eabeea3fc6e9b3dce9166
    hs_token: ab945d11cf6e88035397977b2b2a8b45439d15a215006e4063e787371a5f93fe
    as_token: 3bffbbb968751d26f22f5ea95b404a84a54d16ea71e394f83bb904149b31b866
    url: http://69.164.194.127:9999
    sender_localpart: ircbridge
    de.sorunome.msc2409.push_ephemeral: true
    protocols:
      - irc
    namespaces:
      rooms:
        - exclusive: false
          regex: '!kieouiJuedJoxtVdaG:localhost'
      aliases:
        - exclusive: true
          regex: .*:hazenet\.org
      users:
        - exclusive: true
          regex: '@irc_.*:hazenet\.org'
    rate_limited: false
  homeserver.signing.key: ed25519 a_HOgI tzSDz4EuM30ByZj2POYx7u2+cbhsTIjPQ5LVOS4ffSg
  homeserver.yaml: "# This file is maintained as an up-to-date snapshot of the default\n#
    homeserver.yaml configuration generated by Synapse.\n#\n# It is intended to act
    as a reference for the default configuration,\n# helping admins keep track of
    new options and other changes, and compare\n# their configs with the current default.
    \ As such, many of the actual\n# config values shown are placeholders.\n#\n# It
    is *not* intended to be copied and used as the basis for a real\n# homeserver.yaml.
    Instead, if you are starting from scratch, please generate\n# a fresh config using
    Synapse by following the instructions in\n# https://matrix-org.github.io/synapse/latest/setup/installation.html.\n\n#
    Configuration options that take a time period can be set using a number\n# followed
    by a letter. Letters have the following meanings:\n# s = second\n# m = minute\n#
    h = hour\n# d = day\n# w = week\n# y = year\n# For example, setting redaction_retention_period:
    5m would remove redacted\n# messages from the database after 5 minutes, rather
    than 5 months.\n\n################################################################################\n\n#
    Configuration file for Synapse.\n#\n# This is a YAML file: see [1] for a quick
    introduction. Note in particular\n# that *indentation is important*: all the elements
    of a list or dictionary\n# should have the same indentation.\n#\n# [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\n\n\n##
    Modules ##\n\n# Server admins can expand Synapse's functionality with external
    modules.\n#\n# See https://matrix-org.github.io/synapse/latest/modules/index.html
    for more\n# documentation on how to configure or create custom modules for Synapse.\n#\nmodules:\n\n\n##
    Server ##\n\n# The public-facing domain of the server\n#\n# The server_name name
    will appear at the end of usernames and room addresses\n# created on this server.
    For example if the server_name was example.com,\n# usernames on this server would
    be in the format @user:example.com\n#\n# In most cases you should avoid using
    a matrix specific subdomain such as\n# matrix.example.com or synapse.example.com
    as the server_name for the same\n# reasons you wouldn't use user@email.example.com
    as your email address.\n# See https://matrix-org.github.io/synapse/latest/delegate.html\n#
    for information on how to host Synapse on a subdomain while preserving\n# a clean
    server_name.\n#\n# The server_name cannot be changed later so it is important
    to\n# configure this correctly before you start Synapse. It should be all\n# lowercase
    and may contain an explicit port.\n# Examples: matrix.org, localhost:8080\n#\n#
    This is set in /data/conf.d/server_name.yaml for Debian installations.\nserver_name:
    hazenet.org\n\n# When running as a daemon, the file to store the pid in\n#\npid_file:
    \"/data/matrix-synapse.pid\"\n\n# The absolute URL to the web client which / will
    redirect to.\n#\nweb_client_location: \"https://chat.hazenet.org/\"\n\n# The public-facing
    base URL that clients use to access this Homeserver (not\n# including _matrix/...).
    This is the same URL a user might enter into the\n# 'Custom Homeserver URL' field
    on their client. If you use Synapse with a\n# reverse proxy, this should be the
    URL to reach Synapse via the proxy.\n# Otherwise, it should be the URL to reach
    Synapse's client HTTP listener (see\n# 'listeners' below).\n#\n# Defaults to 'https://<server_name>/'.\n#\npublic_baseurl:
    \"https://matrix.hazenet.org/\"\n\n# Uncomment the following to tell other servers
    to send federation traffic on\n# port 443.\n#\n# By default, other servers will
    try to reach our server on port 8448, which can\n# be inconvenient in some environments.\n#\n#
    Provided 'https://<server_name>/' on port 443 is routed to Synapse, this\n# option
    configures Synapse to serve a file at\n# 'https://<server_name>/.well-known/matrix/server'.
    This will tell other\n# servers to send traffic to port 443 instead.\n#\n# See
    https://matrix-org.github.io/synapse/latest/delegate.html for more\n# information.\n#\n#
    Defaults to 'false'.\n#\nserve_server_wellknown: true\n\n# Set the soft limit
    on the number of file descriptors synapse can use\n# Zero is used to indicate
    synapse should set the soft limit to the\n# hard limit.\n#\n#soft_file_limit:
    0\n\n# Presence tracking allows users to see the state (e.g online/offline)\n#
    of other local and remote users.\n#\npresence:\n  # Uncomment to disable presence
    tracking on this homeserver. This option\n  # replaces the previous top-level
    'use_presence' option.\n  #\n  enabled: false\n\n# Whether to require authentication
    to retrieve profile data (avatars,\n# display names) of other users through the
    client API. Defaults to\n# 'false'. Note that profile data is also available via
    the federation\n# API, unless allow_profile_lookup_over_federation is set to false.\n#\n#require_auth_for_profile_requests:
    true\n\n# Uncomment to require a user to share a room with another user in order\n#
    to retrieve their profile information. Only checked on Client-Server\n# requests.
    Profile requests from other servers should be checked by the\n# requesting server.
    Defaults to 'false'.\n#\n#limit_profile_requests_to_users_who_share_rooms: true\n\n#
    Uncomment to prevent a user's profile data from being retrieved and\n# displayed
    in a room until they have joined it. By default, a user's\n# profile data is included
    in an invite event, regardless of the values\n# of the above two settings, and
    whether or not the users share a server.\n# Defaults to 'true'.\n#\n#include_profile_data_on_invite:
    false\n\n# If set to 'true', removes the need for authentication to access the
    server's\n# public rooms directory through the client API, meaning that anyone
    can\n# query the room directory. Defaults to 'false'.\n#\nallow_public_rooms_without_auth:
    true\n\n# If set to 'true', allows any other homeserver to fetch the server's
    public\n# rooms directory via federation. Defaults to 'false'.\n#\nallow_public_rooms_over_federation:
    true\n\n# The default room version for newly created rooms.\n#\n# Known room versions
    are listed here:\n# https://spec.matrix.org/latest/rooms/#complete-list-of-room-versions\n#\n#
    For example, for room version 1, default_room_version should be set\n# to \"1\".\n#\n#default_room_version:
    \"9\"\n\n# The GC threshold parameters to pass to `gc.set_threshold`, if defined\n#\n#gc_thresholds:
    [700, 10, 10]\n\n# The minimum time in seconds between each GC for a generation,
    regardless of\n# the GC thresholds. This ensures that we don't do GC too frequently.\n#\n#
    A value of `[1s, 10s, 30s]` indicates that a second must pass between consecutive\n#
    generation 0 GCs, etc.\n#\n# Defaults to `[1s, 10s, 30s]`.\n#\n#gc_min_interval:
    [0.5s, 30s, 1m]\n\n# Set the limit on the returned events in the timeline in the
    get\n# and sync operations. The default value is 100. -1 means no upper limit.\n#\n#
    Uncomment the following to increase the limit to 5000.\n#\n#filter_timeline_limit:
    5000\n\n# Whether room invites to users on this server should be blocked\n# (except
    those sent by local server admins). The default is False.\n#\n#block_non_admin_invites:
    true\n\n# Room searching\n#\n# If disabled, new messages will not be indexed for
    searching and users\n# will receive errors when searching for messages. Defaults
    to enabled.\n#\n#enable_search: false\n\n# Prevent outgoing requests from being
    sent to the following blacklisted IP address\n# CIDR ranges. If this option is
    not specified then it defaults to private IP\n# address ranges (see the example
    below).\n#\n# The blacklist applies to the outbound requests for federation, identity
    servers,\n# push servers, and for checking key validity for third-party invite
    events.\n#\n# (0.0.0.0 and :: are always blacklisted, whether or not they are
    explicitly\n# listed here, since they correspond to unroutable addresses.)\n#\n#
    This option replaces federation_ip_range_blacklist in Synapse v1.25.0.\n#\n# Note:
    The value is ignored when an HTTP proxy is in use\n#\n#ip_range_blacklist:\n#
    \ - '127.0.0.0/8'\n#  - '10.0.0.0/8'\n#  - '172.16.0.0/12'\n#  - '192.168.0.0/16'\n#
    \ - '100.64.0.0/10'\n#  - '192.0.0.0/24'\n#  - '169.254.0.0/16'\n#  - '192.88.99.0/24'\n#
    \ - '198.18.0.0/15'\n#  - '192.0.2.0/24'\n#  - '198.51.100.0/24'\n#  - '203.0.113.0/24'\n#
    \ - '224.0.0.0/4'\n#  - '::1/128'\n#  - 'fe80::/10'\n#  - 'fc00::/7'\n#  - '2001:db8::/32'\n#
    \ - 'ff00::/8'\n#  - 'fec0::/10'\n\n# List of IP address CIDR ranges that should
    be allowed for federation,\n# identity servers, push servers, and for checking
    key validity for\n# third-party invite events. This is useful for specifying exceptions
    to\n# wide-ranging blacklisted target IP ranges - e.g. for communication with\n#
    a push server only visible in your network.\n#\n# This whitelist overrides ip_range_blacklist
    and defaults to an empty\n# list.\n#\n#ip_range_whitelist:\n#   - '192.168.1.1'\n\n#
    List of ports that Synapse should listen on, their purpose and their\n# configuration.\n#\n#
    Options for each listener include:\n#\n#   port: the TCP port to bind to\n#\n#
    \  bind_addresses: a list of local addresses to listen on. The default is\n#       'all
    local interfaces'.\n#\n#   type: the type of listener. Normally 'http', but other
    valid options are:\n#       'manhole' (see https://matrix-org.github.io/synapse/latest/manhole.html),\n#
    \      'metrics' (see https://matrix-org.github.io/synapse/latest/metrics-howto.html),\n#
    \      'replication' (see https://matrix-org.github.io/synapse/latest/workers.html).\n#\n#
    \  tls: set to true to enable TLS for this listener. Will use the TLS\n#       key/cert
    specified in tls_private_key_path / tls_certificate_path.\n#\n#   x_forwarded:
    Only valid for an 'http' listener. Set to true to use the\n#       X-Forwarded-For
    header as the client IP. Useful when Synapse is\n#       behind a reverse-proxy.\n#\n#
    \  resources: Only valid for an 'http' listener. A list of resources to host\n#
    \      on this port. Options for each resource are:\n#\n#       names: a list
    of names of HTTP resources. See below for a list of\n#           valid resource
    names.\n#\n#       compress: set to true to enable HTTP compression for this resource.\n#\n#
    \  additional_resources: Only valid for an 'http' listener. A map of\n#        additional
    endpoints which should be loaded via dynamic modules.\n#\n# Valid resource names
    are:\n#\n#   client: the client-server API (/_matrix/client), and the synapse
    admin\n#       API (/_synapse/admin). Also implies 'media' and 'static'.\n#\n#
    \  consent: user consent forms (/_matrix/consent).\n#       See https://matrix-org.github.io/synapse/latest/consent_tracking.html.\n#\n#
    \  federation: the server-server API (/_matrix/federation). Also implies\n#       'media',
    'keys', 'openid'\n#\n#   keys: the key discovery API (/_matrix/key).\n#\n#   media:
    the media API (/_matrix/media).\n#\n#   metrics: the metrics interface.\n#       See
    https://matrix-org.github.io/synapse/latest/metrics-howto.html.\n#\n#   openid:
    OpenID authentication.\n#\n#   replication: the HTTP replication API (/_synapse/replication).\n#
    \      See https://matrix-org.github.io/synapse/latest/workers.html.\n#\n#   static:
    static resources under synapse/static (/_matrix/static). (Mostly\n#       useful
    for 'fallback authentication'.)\n#\nlisteners:\n  # TLS-enabled listener: for
    when matrix traffic is sent directly to synapse.\n  #\n  # Disabled by default.
    To enable it, uncomment the following. (Note that you\n  # will also need to give
    Synapse a TLS key and certificate: see the TLS section\n  # below.)\n  #\n  #-
    port: 8448\n  #  type: http\n  #  tls: true\n  #  x_forwarded: false\n  #  bind_addresses:
    ['0.0.0.0']\n\n  #  resources:\n  #    - names: [client]\n  #      compress: true\n
    \ #    - names: [federation]\n  #      compress: false\n\n  # Unsecure HTTP listener:
    for when matrix traffic passes through a reverse proxy\n  # that unwraps TLS.\n
    \ #\n  # If you plan to use a reverse proxy, please see\n  # https://matrix-org.github.io/synapse/latest/reverse_proxy.html.\n
    \ #\n  - type: http\n    port: 8008\n    bind_addresses: ['0.0.0.0']\n    tls:
    false\n    x_forwarded: true\n    resources:\n      - names: [federation, client]\n
    \       compress: false\n\n    # example additional_resources:\n    #\n    #additional_resources:\n
    \   #  \"/_matrix/my/custom/endpoint\":\n    #    module: my_module.CustomRequestHandler\n
    \   #    config: {}\n\n  # Replication Endpoints\n  # The HTTP replication port\n
    \ - type: http\n    port: 9093\n    bind_addresses: ['0.0.0.0']\n    resources:\n
    \     - names: [replication]\n\n  # Metrics Endpoint\n  - type: metrics\n    port:
    9000\n    bind_addresses: ['0.0.0.0']\n\n  # Turn on the twisted ssh manhole service
    on localhost on the given\n  # port.\n  #\n  #- port: 9000\n  #  bind_addresses:
    ['127.0.0.1']\n  #  type: manhole\n\n# Connection settings for the manhole\n#\nmanhole_settings:\n
    \ # The username for the manhole. This defaults to 'matrix'.\n  #\n  #username:
    manhole\n\n  # The password for the manhole. This defaults to 'rabbithole'.\n
    \ #\n  #password: mypassword\n\n  # The private and public SSH key pair used to
    encrypt the manhole traffic.\n  # If these are left unset, then hardcoded and
    non-secret keys are used,\n  # which could allow traffic to be intercepted if
    sent over a public network.\n  #\n  #ssh_priv_key_path: CONFDIR/id_rsa\n  #ssh_pub_key_path:
    CONFDIR/id_rsa.pub\n\n# Forward extremities can build up in a room due to networking
    delays between\n# homeservers. Once this happens in a large room, calculation
    of the state of\n# that room can become quite expensive. To mitigate this, once
    the number of\n# forward extremities reaches a given threshold, Synapse will send
    an\n# org.matrix.dummy_event event, which will reduce the forward extremities\n#
    in the room.\n#\n# This setting defines the threshold (i.e. number of forward
    extremities in the\n# room) at which dummy events are sent. The default value
    is 10.\n#\n#dummy_events_threshold: 5\n\n\n## Homeserver blocking ##\n\n# How
    to reach the server admin, used in ResourceLimitError\n#\nadmin_contact: 'mailto:abuse@hazenet.org'\n\n#
    Global blocking\n#\n#hs_disabled: false\n#hs_disabled_message: 'Human readable
    reason for why the HS is blocked'\n\n# Monthly Active User Blocking\n#\n# Used
    in cases where the admin or server owner wants to limit to the\n# number of monthly
    active users.\n#\n# 'limit_usage_by_mau' disables/enables monthly active user
    blocking. When\n# enabled and a limit is reached the server returns a 'ResourceLimitError'\n#
    with error type Codes.RESOURCE_LIMIT_EXCEEDED\n#\n# 'max_mau_value' is the hard
    limit of monthly active users above which\n# the server will start blocking user
    actions.\n#\n# 'mau_trial_days' is a means to add a grace period for active users.
    It\n# means that users must be active for this number of days before they\n# can
    be considered active and guards against the case where lots of users\n# sign up
    in a short space of time never to return after their initial\n# session.\n#\n#
    The option `mau_appservice_trial_days` is similar to `mau_trial_days`, but\n#
    applies a different trial number if the user was registered by an appservice.\n#
    A value of 0 means no trial days are applied. Appservices not listed in this\n#
    dictionary use the value of `mau_trial_days` instead.\n#\n# 'mau_limit_alerting'
    is a means of limiting client side alerting\n# should the mau limit be reached.
    This is useful for small instances\n# where the admin has 5 mau seats (say) for
    5 specific people and no\n# interest increasing the mau limit further. Defaults
    to True, which\n# means that alerting is enabled\n#\n#limit_usage_by_mau: false\n#max_mau_value:
    50\n#mau_trial_days: 2\n#mau_limit_alerting: false\n#mau_appservice_trial_days:\n#
    \ \"appservice-id\": 1\n\n# If enabled, the metrics for the number of monthly
    active users will\n# be populated, however no one will be limited. If limit_usage_by_mau\n#
    is true, this is implied to be true.\n#\n#mau_stats_only: false\n\n# Sometimes
    the server admin will want to ensure certain accounts are\n# never blocked by
    mau checking. These accounts are specified here.\n#\n#mau_limit_reserved_threepids:\n#
    \ - medium: 'email'\n#    address: 'reserved_user@example.com'\n\n# Used by phonehome
    stats to group together related servers.\n#server_context: context\n\n# Resource-constrained
    homeserver settings\n#\n# When this is enabled, the room \"complexity\" will be
    checked before a user\n# joins a new remote room. If it is above the complexity
    limit, the server will\n# disallow joining, or will instantly leave.\n#\n# Room
    complexity is an arbitrary measure based on factors such as the number of\n# users
    in the room.\n#\nlimit_remote_rooms:\n  # Uncomment to enable room complexity
    checking.\n  #\n  #enabled: true\n\n  # the limit above which rooms cannot be
    joined. The default is 1.0.\n  #\n  #complexity: 0.5\n\n  # override the error
    which is returned when the room is too complex.\n  #\n  #complexity_error: \"This
    room is too complex.\"\n\n  # allow server admins to join complex rooms. Default
    is false.\n  #\n  #admins_can_join: true\n\n# Whether to require a user to be
    in the room to add an alias to it.\n# Defaults to 'true'.\n#\n#require_membership_for_aliases:
    false\n\n# Whether to allow per-room membership profiles through the send of membership\n#
    events with profile information that differ from the target's global profile.\n#
    Defaults to 'true'.\n#\n#allow_per_room_profiles: false\n\n# The largest allowed
    file size for a user avatar. Defaults to no restriction.\n#\n# Note that user
    avatar changes will not work if this is set without\n# using Synapse's media repository.\n#\n#max_avatar_size:
    10M\n\n# The MIME types allowed for user avatars. Defaults to no restriction.\n#\n#
    Note that user avatar changes will not work if this is set without\n# using Synapse's
    media repository.\n#\n#allowed_avatar_mimetypes: [\"image/png\", \"image/jpeg\",
    \"image/gif\"]\n\n# How long to keep redacted events in unredacted form in the
    database. After\n# this period redacted events get replaced with their redacted
    form in the DB.\n#\n# Defaults to `7d`. Set to `null` to disable.\n#\nredaction_retention_period:
    7d\n\n# How long to track users' last seen time and IPs in the database.\n#\n#
    Defaults to `28d`. Set to `null` to disable clearing out of old rows.\n#\nuser_ips_max_age:
    7d\n\n# Inhibits the /requestToken endpoints from returning an error that might
    leak\n# information about whether an e-mail address is in use or not on this\n#
    homeserver.\n# Note that for some endpoints the error situation is the e-mail
    already being\n# used, and for others the error is entering the e-mail being unused.\n#
    If this option is enabled, instead of returning an error, these endpoints will\n#
    act as if no error happened and return a fake session ID ('sid') to clients.\n#\n#request_token_inhibit_3pid_errors:
    true\n\n# A list of domains that the domain portion of 'next_link' parameters\n#
    must match.\n#\n# This parameter is optionally provided by clients while requesting\n#
    validation of an email or phone number, and maps to a link that\n# users will
    be automatically redirected to after validation\n# succeeds. Clients can make
    use this parameter to aid the validation\n# process.\n#\n# The whitelist is applied
    whether the homeserver or an\n# identity server is handling validation.\n#\n#
    The default value is no whitelist functionality; all domains are\n# allowed. Setting
    this value to an empty list will instead disallow\n# all domains.\n#\n#next_link_domain_whitelist:
    [\"matrix.org\"]\n\n# Templates to use when generating email or HTML page contents.\n#\ntemplates:\n
    \ # Directory in which Synapse will try to find template files to use to generate\n
    \ # email or HTML page contents.\n  # If not set, or a file is not found within
    the template directory, a default\n  # template from within the Synapse package
    will be used.\n  #\n  # See https://matrix-org.github.io/synapse/latest/templates.html
    for more\n  # information about using custom templates.\n  #\n  #custom_template_directory:
    /var/lib/matrix-synapse/res/templates/\n\n# List of rooms to exclude from sync
    responses. This is useful for server\n# administrators wishing to group users
    into a room without these users being able\n# to see it from their client.\n#\n#
    By default, no room is excluded.\n#\n#exclude_rooms_from_sync:\n#    - !foo:example.com\n\n\n#
    Message retention policy at the server level.\n#\n# Room admins and mods can define
    a retention period for their rooms using the\n# 'm.room.retention' state event,
    and server admins can cap this period by setting\n# the 'allowed_lifetime_min'
    and 'allowed_lifetime_max' config options.\n#\n# If this feature is enabled, Synapse
    will regularly look for and purge events\n# which are older than the room's maximum
    retention period. Synapse will also\n# filter events received over federation
    so that events that should have been\n# purged are ignored and not stored again.\n#\nretention:\n
    \ # The message retention policies feature is disabled by default. Uncomment the\n
    \ # following line to enable it.\n  #\n  enabled: true\n\n  # Default retention
    policy. If set, Synapse will apply it to rooms that lack the\n  # 'm.room.retention'
    state event. Currently, the value of 'min_lifetime' doesn't\n  # matter much because
    Synapse doesn't take it into account yet.\n  #\n  #default_policy:\n  #  min_lifetime:
    30m\n  #  max_lifetime: 10y\n\n  # Retention policy limits. If set, and the state
    of a room contains a\n  # 'm.room.retention' event in its state which contains
    a 'min_lifetime' or a\n  # 'max_lifetime' that's out of these bounds, Synapse
    will cap the room's policy\n  # to these limits when running purge jobs.\n  #\n
    \ allowed_lifetime_min: 30m\n  allowed_lifetime_max: 10y\n\n  # Server admins
    can define the settings of the background jobs purging the\n  # events which lifetime
    has expired under the 'purge_jobs' section.\n  #\n  # If no configuration is provided,
    a single job will be set up to delete expired\n  # events in every room daily.\n
    \ #\n  # Each job's configuration defines which range of message lifetimes the
    job\n  # takes care of. For example, if 'shortest_max_lifetime' is '2d' and\n
    \ # 'longest_max_lifetime' is '3d', the job will handle purging expired events
    in\n  # rooms whose state defines a 'max_lifetime' that's both higher than 2 days,
    and\n  # lower than or equal to 3 days. Both the minimum and the maximum value
    of a\n  # range are optional, e.g. a job with no 'shortest_max_lifetime' and a\n
    \ # 'longest_max_lifetime' of '3d' will handle every room with a retention policy\n
    \ # which 'max_lifetime' is lower than or equal to three days.\n  #\n  # The rationale
    for this per-job configuration is that some rooms might have a\n  # retention
    policy with a low 'max_lifetime', where history needs to be purged\n  # of outdated
    messages on a more frequent basis than for the rest of the rooms\n  # (e.g. every
    12h), but not want that purge to be performed by a job that's\n  # iterating over
    every room it knows, which could be heavy on the server.\n  #\n  # If any purge
    job is configured, it is strongly recommended to have at least\n  # a single job
    with neither 'shortest_max_lifetime' nor 'longest_max_lifetime'\n  # set, or one
    job without 'shortest_max_lifetime' and one job without\n  # 'longest_max_lifetime'
    set. Otherwise some rooms might be ignored, even if\n  # 'allowed_lifetime_min'
    and 'allowed_lifetime_max' are set, because capping a\n  # room's policy to these
    values is done after the policies are retrieved from\n  # Synapse's database (which
    is done using the range specified in a purge job's\n  # configuration).\n  #\n
    \ #purge_jobs:\n  #  - shortest_max_lifetime: 1d\n  #    longest_max_lifetime:
    3d\n  #    interval: 12h\n  #  - shortest_max_lifetime: 3d\n  #    longest_max_lifetime:
    1y\n  #    interval: 24h\n  purge_jobs:\n    - longest_max_lifetime: 1h\n      interval:
    30m\n    - shortest_max_lifetime: 1h\n      longest_max_lifetime: 12h\n      interval:
    1h\n    - shortest_max_lifetime: 12h\n      longest_max_lifetime: 1d\n      interval:
    12h\n    - shortest_max_lifetime: 1d\n      longest_max_lifetime: 10y\n      interval:
    24h\n\n\n## TLS ##\n\n# PEM-encoded X509 certificate for TLS.\n# This certificate,
    as of Synapse 1.0, will need to be a valid and verifiable\n# certificate, signed
    by a recognised Certificate Authority.\n#\n# Be sure to use a `.pem` file that
    includes the full certificate chain including\n# any intermediate certificates
    (for instance, if using certbot, use\n# `fullchain.pem` as your certificate, not
    `cert.pem`).\n#\n#tls_certificate_path: \"/data/fullchain.pem\"\n\n# PEM-encoded
    private key for TLS\n#\n#tls_private_key_path: \"/data/privkey.pem\"\n\n#tls_dh_params_path:
    \"/etc/ssl/certs/envs_dhparam.pem\"\n\n#no_tls: false\n\n# Whether to verify TLS
    server certificates for outbound federation requests.\n#\n# Defaults to `true`.
    To disable certificate verification, uncomment the\n# following line.\n#\n#federation_verify_certificates:
    false\n\n# The minimum TLS version that will be used for outbound federation requests.\n#\n#
    Defaults to `1`. Configurable to `1`, `1.1`, `1.2`, or `1.3`. Note\n# that setting
    this value higher than `1.2` will prevent federation to most\n# of the public
    Matrix network: only configure it to `1.3` if you have an\n# entirely private
    federation setup and you can ensure TLS 1.3 support.\n#\n#federation_client_minimum_tls_version:
    1.2\n\n# Skip federation certificate verification on the following whitelist\n#
    of domains.\n#\n# This setting should only be used in very specific cases, such
    as\n# federation over Tor hidden services and similar. For private networks\n#
    of homeservers, you likely want to use a private CA instead.\n#\n# Only effective
    if federation_verify_certicates is `true`.\n#\n#federation_certificate_verification_whitelist:\n#
    \ - lon.example.com\n#  - \"*.domain.com\"\n#  - \"*.onion\"\n\n# List of custom
    certificate authorities for federation traffic.\n#\n# This setting should only
    normally be used within a private network of\n# homeservers.\n#\n# Note that this
    list will replace those that are provided by your\n# operating environment. Certificates
    must be in PEM format.\n#\n#federation_custom_ca_list:\n#  - myCA1.pem\n#  - myCA2.pem\n#
    \ - myCA3.pem\n\n\n## Federation ##\n\n# Restrict federation to the following
    whitelist of domains.\n# N.B. we recommend also firewalling your federation listener
    to limit\n# inbound federation traffic as early as possible, rather than relying\n#
    purely on this application-layer restriction.  If not specified, the\n# default
    is to whitelist everything.\n#\n#federation_domain_whitelist:\n#  - matrix.org\n#
    \ - hazenet.org\n#  - envs.net\n#  - spark.im\n\n# Report prometheus metrics on
    the age of PDUs being sent to and received from\n# the following domains. This
    can be used to give an idea of \"delay\" on inbound\n# and outbound federation,
    though be aware that any delay can be due to problems\n# at either end or with
    the intermediate network.\n#\n# By default, no domains are monitored in this way.\n#\n#federation_metrics_domains:\n#
    \ - matrix.org\n#  - example.com\n\n# Uncomment to disable profile lookup over
    federation. By default, the\n# Federation API allows other homeservers to obtain
    profile data of any user\n# on this homeserver. Defaults to 'true'.\n#\n#allow_profile_lookup_over_federation:
    false\n\n# Uncomment to allow device display name lookup over federation. By default,
    the\n# Federation API prevents other homeservers from obtaining the display names
    of\n# user devices on this homeserver. Defaults to 'false'.\n#\n#allow_device_name_lookup_over_federation:
    true\n\n\n## Caching ##\n\n# Caching can be configured through the following options.\n#\n#
    A cache 'factor' is a multiplier that can be applied to each of\n# Synapse's caches
    in order to increase or decrease the maximum\n# number of entries that can be
    stored.\n#\n# The configuration for cache factors (caches.global_factor and\n#
    caches.per_cache_factors) can be reloaded while the application is running,\n#
    by sending a SIGHUP signal to the Synapse process. Changes to other parts of\n#
    the caching config will NOT be applied after a SIGHUP is received; a restart\n#
    is necessary.\n\n# The number of events to cache in memory. Not affected by\n#
    caches.global_factor.\n#\n#event_cache_size: 10K\n\ncaches:\n  # Controls the
    global cache factor, which is the default cache factor\n  # for all caches if
    a specific factor for that cache is not otherwise\n  # set.\n  #\n  # This can
    also be set by the \"SYNAPSE_CACHE_FACTOR\" environment\n  # variable. Setting
    by environment variable takes priority over\n  # setting through the config file.\n
    \ #\n  # Defaults to 0.5, which will half the size of all caches.\n  #\n  global_factor:
    2.0\n\n  # A dictionary of cache name to cache factor for that individual\n  #
    cache. Overrides the global cache factor for a given cache.\n  #\n  # These can
    also be set through environment variables comprised\n  # of \"SYNAPSE_CACHE_FACTOR_\"
    + the name of the cache in capital\n  # letters and underscores. Setting by environment
    variable\n  # takes priority over setting through the config file.\n  # Ex. SYNAPSE_CACHE_FACTOR_GET_USERS_WHO_SHARE_ROOM_WITH_USER=2.0\n
    \ #\n  # Some caches have '*' and other characters that are not\n  # alphanumeric
    or underscores. These caches can be named with or\n  # without the special characters
    stripped. For example, to specify\n  # the cache factor for `*stateGroupCache*`
    via an environment\n  # variable would be `SYNAPSE_CACHE_FACTOR_STATEGROUPCACHE=2.0`.\n
    \ #\n  per_cache_factors:\n    get_users_in_room: 5.0\n    #get_joined_profile_from_event_id:
    5.0\n    #get_users_who_share_room_with_user: 2.0\n\n  # Controls whether cache
    entries are evicted after a specified time\n  # period. Defaults to true. Uncomment
    to disable this feature.\n  #\n  #expire_caches: false\n\n  # If expire_caches
    is enabled, this flag controls how long an entry can\n  # be in a cache without
    having been accessed before being evicted.\n  # Defaults to 30m. Uncomment to
    set a different time to live for cache entries.\n  #\n  #cache_entry_ttl: 30m\n\n
    \ # This flag enables cache autotuning, and is further specified by the sub-options
    `max_cache_memory_usage`,\n  # `target_cache_memory_usage`, `min_cache_ttl`. These
    flags work in conjunction with each other to maintain\n  # a balance between cache
    memory usage and cache entry availability. You must be using jemalloc to utilize\n
    \ # this option, and all three of the options must be specified for this feature
    to work.\n  #cache_autotuning:\n    # This flag sets a ceiling on much memory
    the cache can use before caches begin to be continuously evicted.\n    # They
    will continue to be evicted until the memory usage drops below the `target_memory_usage`,
    set in\n    # the flag below, or until the `min_cache_ttl` is hit.\n    #max_cache_memory_usage:
    1024M\n\n    # This flag sets a rough target for the desired memory usage of the
    caches.\n    #target_cache_memory_usage: 758M\n\n    # 'min_cache_ttl` sets a
    limit under which newer cache entries are not evicted and is only applied when\n
    \   # caches are actively being evicted/`max_cache_memory_usage` has been exceeded.
    This is to protect hot caches\n    # from being emptied while Synapse is evicting
    due to memory.\n    #min_cache_ttl: 5m\n\n  # Controls how long the results of
    a /sync request are cached for after\n  # a successful response is returned. A
    higher duration can help clients with\n  # intermittent connections, at the cost
    of higher memory usage.\n  #\n  # By default, this is zero, which means that sync
    responses are not cached\n  # at all.\n  #\n  #sync_response_cache_duration: 2m\n\n\n##
    Database ##\n\n# The 'database' setting defines the database that synapse uses
    to store all of\n# its data.\n#\n# 'name' gives the database engine to use: either
    'sqlite3' (for SQLite) or\n# 'psycopg2' (for PostgreSQL).\n#\n# 'txn_limit' gives
    the maximum number of transactions to run per connection\n# before reconnecting.
    Defaults to 0, which means no limit.\n#\n# 'allow_unsafe_locale' is an option
    specific to Postgres. Under the default behavior, Synapse will refuse to\n# start
    if the postgres db is set to a non-C locale. You can override this behavior (which
    is *not* recommended)\n# by setting 'allow_unsafe_locale' to true. Note that doing
    so may corrupt your database. You can find more information\n# here: https://matrix-org.github.io/synapse/latest/postgres.html#fixing-incorrect-collate-or-ctype
    and here:\n# https://wiki.postgresql.org/wiki/Locale_data_changes\n#\n# 'args'
    gives options which are passed through to the database engine,\n# except for options
    starting 'cp_', which are used to configure the Twisted\n# connection pool. For
    a reference to valid arguments, see:\n#   * for sqlite: https://docs.python.org/3/library/sqlite3.html#sqlite3.connect\n#
    \  * for postgres: https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PARAMKEYWORDS\n#
    \  * for the connection pool: https://twistedmatrix.com/documents/current/api/twisted.enterprise.adbapi.ConnectionPool.html#__init__\n#\ndatabase:\n
    \ # The database engine name\n  #name: \"sqlite3\"\n  # Arguments to pass to the
    engine\n  #args:\n  #  # Path to the database\n  #  database: \"/var/lib/matrix-synapse/homeserver.db\"\n
    \ name: \"psycopg2\"\n  txn_limit: 10000\n  args:\n    user: synapse\n    password:
    postgres123\n    database: synapse-db\n    host: postgres-service\n    cp_min:
    5\n    cp_max: 10\n\n\n## Logging ##\n\n# A yaml python logging config file as
    described by\n# https://docs.python.org/3.7/library/logging.config.html#configuration-dictionary-schema\n#\nlog_config:
    \"/data/log.yaml\"\n\n\n## Ratelimiting ##\n\n# Ratelimiting settings for client
    actions (registration, login, messaging).\n#\n# Each ratelimiting configuration
    is made of two parameters:\n#   - per_second: number of requests a client can
    send per second.\n#   - burst_count: number of requests a client can send before
    being throttled.\n#\n# Synapse currently uses the following configurations:\n#
    \  - one for messages that ratelimits sending based on the account the client\n#
    \    is using\n#   - one for registration that ratelimits registration requests
    based on the\n#     client's IP address.\n#   - one for checking the validity
    of registration tokens that ratelimits\n#     requests based on the client's IP
    address.\n#   - one for login that ratelimits login requests based on the client's
    IP\n#     address.\n#   - one for login that ratelimits login requests based on
    the account the\n#     client is attempting to log into.\n#   - one for login
    that ratelimits login requests based on the account the\n#     client is attempting
    to log into, based on the amount of failed login\n#     attempts for this account.\n#
    \  - one for ratelimiting redactions by room admins. If this is not explicitly\n#
    \    set then it uses the same ratelimiting as per rc_message. This is useful\n#
    \    to allow room admins to deal with abuse quickly.\n#   - two for ratelimiting
    number of rooms a user can join, \"local\" for when\n#     users are joining rooms
    the server is already in (this is cheap) vs\n#     \"remote\" for when users are
    trying to join rooms not on the server (which\n#     can be more expensive)\n#
    \  - one for ratelimiting how often a user or IP can attempt to validate a 3PID.\n#
    \  - two for ratelimiting how often invites can be sent in a room or to a\n#     specific
    user.\n#   - one for ratelimiting 3PID invites (i.e. invites sent to a third-party
    ID\n#     such as an email address or a phone number) based on the account that's\n#
    \    sending the invite.\n#\n# The defaults are as shown below.\n#\n#rc_message:\n#
    \ per_second: 0.2\n#  burst_count: 10\n#\n#rc_registration:\n#  per_second: 0.17\n#
    \ burst_count: 3\n#\n#rc_registration_token_validity:\n#  per_second: 0.1\n#  burst_count:
    5\n#\n#rc_login:\n#  address:\n#    per_second: 0.17\n#    burst_count: 3\n#  account:\n#
    \   per_second: 0.17\n#    burst_count: 3\n#  failed_attempts:\n#    per_second:
    0.17\n#    burst_count: 3\n#\n#rc_admin_redaction:\n#  per_second: 1\n#  burst_count:
    50\n#\n#rc_joins:\n#  local:\n#    per_second: 0.1\n#    burst_count: 10\n#  remote:\n#
    \   per_second: 0.01\n#    burst_count: 10\n#\n#rc_3pid_validation:\n#  per_second:
    0.003\n#  burst_count: 5\n#\n#rc_invites:\n#  per_room:\n#    per_second: 0.3\n#
    \   burst_count: 10\n#  per_user:\n#    per_second: 0.003\n#    burst_count: 5\n#rc_third_party_invite:\n#
    \ per_second: 0.2\n#  burst_count: 10\n\n# Ratelimiting settings for incoming
    federation\n#\n# The rc_federation configuration is made up of the following settings:\n#
    \  - window_size: window size in milliseconds\n#   - sleep_limit: number of federation
    requests from a single server in\n#     a window before the server will delay
    processing the request.\n#   - sleep_delay: duration in milliseconds to delay
    processing events\n#     from remote servers by if they go over the sleep limit.\n#
    \  - reject_limit: maximum number of concurrent federation requests\n#     allowed
    from a single server\n#   - concurrent: number of federation requests to concurrently
    process\n#     from a single server\n#\n# The defaults are as shown below.\n#\n#rc_federation:\n#
    \ window_size: 1000\n#  sleep_limit: 10\n#  sleep_delay: 500\n#  reject_limit:
    50\n#  concurrent: 3\n\n# Target outgoing federation transaction frequency for
    sending read-receipts,\n# per-room.\n#\n# If we end up trying to send out more
    read-receipts, they will get buffered up\n# into fewer transactions.\n#\n#federation_rr_transactions_per_room_per_second:
    50\n\n\n\n## Media Store ##\n\n# Enable the media store service in the Synapse
    master. Uncomment the\n# following if you are using a separate media store worker.\n#\nenable_media_repo:
    true\n\n# Directory where uploaded images and attachments are stored.\n#\nmedia_store_path:
    \"/media\"\n\n# Media storage providers allow media to be stored in different\n#
    locations.\n#\n#media_storage_providers:\n#  - module: file_system\n#    # Whether
    to store newly uploaded local files\n#    store_local: false\n#    # Whether to
    store newly downloaded remote files\n#    store_remote: false\n#    # Whether
    to wait for successful storage for local uploads\n#    store_synchronous: false\n#
    \   config:\n#       directory: /mnt/some/other/directory\n\n# The largest allowed
    upload size in bytes\n#\n# If you are using a reverse proxy you may also need
    to set this value in\n# your reverse proxy's config. Notably Nginx has a small
    max body size by default.\n# See https://matrix-org.github.io/synapse/latest/reverse_proxy.html.\n#\nmax_upload_size:
    16M\n\n# Maximum number of pixels that will be thumbnailed\n#\n#max_image_pixels:
    32M\n\n# Whether to generate new thumbnails on the fly to precisely match\n# the
    resolution requested by the client. If true then whenever\n# a new resolution
    is requested by the client the server will\n# generate a new thumbnail. If false
    the server will pick a thumbnail\n# from a precalculated list.\n#\n#dynamic_thumbnails:
    false\n\n# List of thumbnails to precalculate when an image is uploaded.\n#\n#thumbnail_sizes:\n#
    \ - width: 32\n#    height: 32\n#    method: crop\n#  - width: 96\n#    height:
    96\n#    method: crop\n#  - width: 320\n#    height: 240\n#    method: scale\n#
    \ - width: 640\n#    height: 480\n#    method: scale\n#  - width: 800\n#    height:
    600\n#    method: scale\n\n# Is the preview URL API enabled?\n#\n# 'false' by
    default: uncomment the following to enable it (and specify a\n# url_preview_ip_range_blacklist
    blacklist).\n#\n#url_preview_enabled: true\n\n# List of IP address CIDR ranges
    that the URL preview spider is denied\n# from accessing.  There are no defaults:
    you must explicitly\n# specify a list for URL previewing to work.  You should
    specify any\n# internal services in your network that you do not want synapse
    to try\n# to connect to, otherwise anyone in any Matrix room could cause your\n#
    synapse to issue arbitrary GET requests to your internal services,\n# causing
    serious security issues.\n#\n# (0.0.0.0 and :: are always blacklisted, whether
    or not they are explicitly\n# listed here, since they correspond to unroutable
    addresses.)\n#\n# This must be specified if url_preview_enabled is set. It is
    recommended that\n# you uncomment the following list as a starting point.\n#\n#
    Note: The value is ignored when an HTTP proxy is in use\n#\n#url_preview_ip_range_blacklist:\n#
    \ - '127.0.0.0/8'\n#  - '10.0.0.0/8'\n#  - '172.16.0.0/12'\n#  - '192.168.0.0/16'\n#
    \ - '100.64.0.0/10'\n#  - '192.0.0.0/24'\n#  - '169.254.0.0/16'\n#  - '192.88.99.0/24'\n#
    \ - '198.18.0.0/15'\n#  - '192.0.2.0/24'\n#  - '198.51.100.0/24'\n#  - '203.0.113.0/24'\n#
    \ - '224.0.0.0/4'\n#  - '::1/128'\n#  - 'fe80::/10'\n#  - 'fc00::/7'\n#  - '2001:db8::/32'\n#
    \ - 'ff00::/8'\n#  - 'fec0::/10'\n\n# List of IP address CIDR ranges that the
    URL preview spider is allowed\n# to access even if they are specified in url_preview_ip_range_blacklist.\n#
    This is useful for specifying exceptions to wide-ranging blacklisted\n# target
    IP ranges - e.g. for enabling URL previews for a specific private\n# website only
    visible in your network.\n#\n#url_preview_ip_range_whitelist:\n#   - '192.168.1.1'\n\n#
    Optional list of URL matches that the URL preview spider is\n# denied from accessing.
    \ You should use url_preview_ip_range_blacklist\n# in preference to this, otherwise
    someone could define a public DNS\n# entry that points to a private IP address
    and circumvent the blacklist.\n# This is more useful if you know there is an entire
    shape of URL that\n# you know that will never want synapse to try to spider.\n#\n#
    Each list entry is a dictionary of url component attributes as returned\n# by
    urlparse.urlsplit as applied to the absolute form of the URL.  See\n# https://docs.python.org/2/library/urlparse.html#urlparse.urlsplit\n#
    The values of the dictionary are treated as an filename match pattern\n# applied
    to that component of URLs, unless they start with a ^ in which\n# case they are
    treated as a regular expression match.  If all the\n# specified component matches
    for a given list item succeed, the URL is\n# blacklisted.\n#\n#url_preview_url_blacklist:\n#
    \ # blacklist any URL with a username in its URI\n#  - username: '*'\n#\n#  #
    blacklist all *.google.com URLs\n#  - netloc: 'google.com'\n#  - netloc: '*.google.com'\n#\n#
    \ # blacklist all plain HTTP URLs\n#  - scheme: 'http'\n#\n#  # blacklist http(s)://www.acme.com/foo\n#
    \ - netloc: 'www.acme.com'\n#    path: '/foo'\n#\n#  # blacklist any URL with
    a literal IPv4 address\n#  - netloc: '^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$'\n\n#
    The largest allowed URL preview spidering size in bytes\n#\n#max_spider_size:
    10M\n\n# A list of values for the Accept-Language HTTP header used when\n# downloading
    webpages during URL preview generation. This allows\n# Synapse to specify the
    preferred languages that URL previews should\n# be in when communicating with
    remote servers.\n#\n# Each value is a IETF language tag; a 2-3 letter identifier
    for a\n# language, optionally followed by subtags separated by '-', specifying\n#
    a country or region variant.\n#\n# Multiple values can be provided, and a weight
    can be added to each by\n# using quality value syntax (;q=). '*' translates to
    any language.\n#\n# Defaults to \"en\".\n#\n# Example:\n#\n# url_preview_accept_language:\n#
    \  - en-UK\n#   - en-US;q=0.9\n#   - fr;q=0.8\n#   - *;q=0.7\n#\nurl_preview_accept_language:\n#
    \  - en\n\n\n# oEmbed allows for easier embedding content from a website. It can
    be\n# used for generating URLs previews of services which support it.\n#\noembed:\n
    \ # A default list of oEmbed providers is included with Synapse.\n  #\n  # Uncomment
    the following to disable using these default oEmbed URLs.\n  # Defaults to 'false'.\n
    \ #\n  #disable_default_providers: true\n\n  # Additional files with oEmbed configuration
    (each should be in the\n  # form of providers.json).\n  #\n  # By default, this
    list is empty (so only the default providers.json\n  # is used).\n  #\n  #additional_providers:\n
    \ #  - oembed/my_providers.json\n\n\n## Captcha ##\n# See docs/CAPTCHA_SETUP.md
    for full details of configuring this.\n\n# This homeserver's ReCAPTCHA public
    key. Must be specified if\n# enable_registration_captcha is enabled.\n#\nrecaptcha_public_key:
    \"6LdJxhghAAAAAC7F8-97b7X0f8zO1nNAp46Z2KqL\"\n\n# This homeserver's ReCAPTCHA
    private key. Must be specified if\n# enable_registration_captcha is enabled.\n#\nrecaptcha_private_key:
    \"6LdJxhghAAAAANG75TVsmI5aZ-sDHGyAwPpd7QJo\"\n\n# Uncomment to enable ReCaptcha
    checks when registering, preventing signup\n# unless a captcha is answered. Requires
    a valid ReCaptcha\n# public/private key. Defaults to 'false'.\n#\nenable_registration_captcha:
    true\n\nenable_registration_without_verification: false\n\n# The API endpoint
    to use for verifying m.login.recaptcha responses.\n# Defaults to \"https://www.recaptcha.net/recaptcha/api/siteverify\".\n#\n#recaptcha_siteverify_api:
    \"https://my.recaptcha.site\"\n\n\n## TURN ##\n\n# The public URIs of the TURN
    server to give to clients\n#\nturn_uris: [\n        \"turn:turn.hazenet.org:3478?transport=udp\",\n
    \       \"turn:turn.hazenet.org:3478?transport=tcp\",\n        \"turns:turn.hazenet.org:5349?transport=udp\",\n
    \       \"turns:turn.hazenet.org:5349?transport=tcp\"\n        ]\n\n# The shared
    secret used to compute passwords for the TURN server\n#\nturn_shared_secret: \"xxx\"\n\n#
    The Username and password if the TURN server needs them and\n# does not use a
    token\n#\n#turn_username: \"TURNSERVER_USERNAME\"\n#turn_password: \"TURNSERVER_PASSWORD\"\n\n#
    How long generated TURN credentials last\n#\nturn_user_lifetime: 1h\n\n# Whether
    guests should be allowed to use the TURN server.\n# This defaults to True, otherwise
    VoIP will be unreliable for guests.\n# However, it does introduce a slight security
    risk as it allows users to\n# connect to arbitrary endpoints without having first
    signed up for a\n# valid account (e.g. by passing a CAPTCHA).\n#\nturn_allow_guests:
    true\n\n\n## Registration ##\n#\n# Registration can be rate-limited using the
    parameters in the \"Ratelimiting\"\n# section of this file.\n\n# Enable registration
    for new users. Defaults to 'false'. It is highly recommended that if you enable
    registration,\n# you use either captcha, email, or token-based verification to
    verify that new users are not bots. In order to enable registration\n# without
    any verification, you must also set `enable_registration_without_verification`,
    found below.\n#\nenable_registration: true\n\n# Enable registration without email
    or captcha verification. Note: this option is *not* recommended,\n# as registration
    without verification is a known vector for spam and abuse. Defaults to false.
    Has no effect\n# unless `enable_registration` is also enabled.\n#\n#enable_registration_without_verification:
    true\n\n# Time that a user's session remains valid for, after they log in.\n#\n#
    Note that this is not currently compatible with guest logins.\n#\n# Note also
    that this is calculated at login time: changes are not applied\n# retrospectively
    to users who have already logged in.\n#\n# By default, this is infinite.\n#\n#session_lifetime:
    24h\n\n# Time that an access token remains valid for, if the session is\n# using
    refresh tokens.\n# For more information about refresh tokens, please see the manual.\n#
    Note that this only applies to clients which advertise support for\n# refresh
    tokens.\n#\n# Note also that this is calculated at login time and refresh time:\n#
    changes are not applied to existing sessions until they are refreshed.\n#\n# By
    default, this is 5 minutes.\n#\n#refreshable_access_token_lifetime: 5m\n\n# Time
    that a refresh token remains valid for (provided that it is not\n# exchanged for
    another one first).\n# This option can be used to automatically log-out inactive
    sessions.\n# Please see the manual for more information.\n#\n# Note also that
    this is calculated at login time and refresh time:\n# changes are not applied
    to existing sessions until they are refreshed.\n#\n# By default, this is infinite.\n#\n#refresh_token_lifetime:
    24h\n\n# Time that an access token remains valid for, if the session is NOT\n#
    using refresh tokens.\n# Please note that not all clients support refresh tokens,
    so setting\n# this to a short value may be inconvenient for some users who will\n#
    then be logged out frequently.\n#\n# Note also that this is calculated at login
    time: changes are not applied\n# retrospectively to existing sessions for users
    that have already logged in.\n#\n# By default, this is infinite.\n#\n#nonrefreshable_access_token_lifetime:
    24h\n\n# The user must provide all of the below types of 3PID when registering.\n#\nregistrations_require_3pid:
    []\n#  - email\n#  - msisdn\n\n# Explicitly disable asking for MSISDNs from the
    registration\n# flow (overrides registrations_require_3pid if MSISDNs are set
    as required)\n#\n#disable_msisdn_registration: true\n\n# Mandate that users are
    only allowed to associate certain formats of\n# 3PIDs with accounts on this server.\n#\n#allowed_local_3pids:\n#
    \ - medium: email\n#    pattern: '^[^@]+@matrix\\.org$'\n#  - medium: email\n#
    \   pattern: '^[^@]+@vector\\.im$'\n#  - medium: msisdn\n#    pattern: '\\+44'\n\n#
    Enable 3PIDs lookup requests to identity servers from this server.\n#\n#enable_3pid_lookup:
    true\n\n# Require users to submit a token during registration.\n# Tokens can be
    managed using the admin API:\n# https://matrix-org.github.io/synapse/latest/usage/administration/admin_api/registration_tokens.html\n#
    Note that `enable_registration` must be set to `true`.\n# Disabling this option
    will not delete any tokens previously generated.\n# Defaults to false. Uncomment
    the following to require tokens:\n#\n#registration_requires_token: true\n\n# Allow
    users to submit a token during registration to bypass any required 3pid\n# steps
    configured in `registrations_require_3pid`.\n# Defaults to false, requiring that
    registration tokens (if enabled) complete a 3pid flow.\n#\n#enable_registration_token_3pid_bypass:
    false\n\n# If set, allows registration of standard or admin accounts by anyone
    who\n# has the shared secret, even if registration is otherwise disabled.\n#\nregistration_shared_secret:
    xxx\n\n# Set the number of bcrypt rounds used to generate password hash.\n# Larger
    numbers increase the work factor needed to generate the hash.\n# The default number
    is 12 (which equates to 2^12 rounds).\n# N.B. that increasing this will exponentially
    increase the time required\n# to register or login - e.g. 24 => 2^24 rounds which
    will take >20 mins.\n#\nbcrypt_rounds: 12\n\n# Allows users to register as guests
    without a password/email/etc, and\n# participate in rooms hosted on this server
    which have been made\n# accessible to anonymous users.\n#\nallow_guest_access:
    false\n\n# The identity server which we suggest that clients should use when users
    log\n# in on this server.\n#\n# (By default, no suggestion is made, so it is left
    up to the client.\n# This setting is ignored unless public_baseurl is also explicitly
    set.)\n#\n#default_identity_server: https://matrix.org\n\n# Handle threepid (email/phone
    etc) registration and password resets through a set of\n# *trusted* identity servers.
    Note that this allows the configured identity server to\n# reset passwords for
    accounts!\n#\n# Be aware that if `email` is not set, and SMTP options have not
    been\n# configured in the email config block, registration and user password resets
    via\n# email will be globally disabled.\n#\n# Additionally, if `msisdn` is not
    set, registration and password resets via msisdn\n# will be disabled regardless,
    and users will not be able to associate an msisdn\n# identifier to their account.
    This is due to Synapse currently not supporting\n# any method of sending SMS messages
    on its own.\n#\n# To enable using an identity server for operations regarding
    a particular third-party\n# identifier type, set the value to the URL of that
    identity server as shown in the\n# examples below.\n#\n# Servers handling the
    these requests must answer the `/requestToken` endpoints defined\n# by the Matrix
    Identity Service API specification:\n# https://matrix.org/docs/spec/identity_service/latest\n#\naccount_threepid_delegates:\n
    \   #email: https://example.com     # Delegate email sending to example.com\n
    \   #msisdn: http://localhost:8090  # Delegate SMS sending to this local process\n\n#
    Whether users are allowed to change their displayname after it has\n# been initially
    set. Useful when provisioning users based on the\n# contents of a third-party
    directory.\n#\n# Does not apply to server administrators. Defaults to 'true'\n#\n#enable_set_displayname:
    false\n\n# Whether users are allowed to change their avatar after it has been\n#
    initially set. Useful when provisioning users based on the contents\n# of a third-party
    directory.\n#\n# Does not apply to server administrators. Defaults to 'true'\n#\n#enable_set_avatar_url:
    false\n\n# Whether users can change the 3PIDs associated with their accounts\n#
    (email address and msisdn).\n#\n# Defaults to 'true'\n#\n#enable_3pid_changes:
    false\n\n# Users who register on this homeserver will automatically be joined\n#
    to these rooms.\n#\n# By default, any room aliases included in this list will
    be created\n# as a publicly joinable room when the first user registers for the\n#
    homeserver. This behaviour can be customised with the settings below.\n# If the
    room already exists, make certain it is a publicly joinable\n# room. The join
    rule of the room must be set to 'public'.\n#\nauto_join_rooms:\n  - \"#hazenet:hazenet.org\"\n
    \ - \"#lounge:hazenet.org\"\n\n# Where auto_join_rooms are specified, setting
    this flag ensures that the\n# the rooms exist by creating them when the first
    user on the\n# homeserver registers.\n#\n# By default the auto-created rooms are
    publicly joinable from any federated\n# server. Use the autocreate_auto_join_rooms_federated
    and\n# autocreate_auto_join_room_preset settings below to customise this behaviour.\n#\n#
    Setting to false means that if the rooms are not manually created,\n# users cannot
    be auto-joined since they do not exist.\n#\n# Defaults to true. Uncomment the
    following line to disable automatically\n# creating auto-join rooms.\n#\nautocreate_auto_join_rooms:
    true\n\n# Whether the auto_join_rooms that are auto-created are available via\n#
    federation. Only has an effect if autocreate_auto_join_rooms is true.\n#\n# Note
    that whether a room is federated cannot be modified after\n# creation.\n#\n# Defaults
    to true: the room will be joinable from other servers.\n# Uncomment the following
    to prevent users from other homeservers from\n# joining these rooms.\n#\n#autocreate_auto_join_rooms_federated:
    false\n\n# The room preset to use when auto-creating one of auto_join_rooms. Only
    has an\n# effect if autocreate_auto_join_rooms is true.\n#\n# This can be one
    of \"public_chat\", \"private_chat\", or \"trusted_private_chat\".\n# If a value
    of \"private_chat\" or \"trusted_private_chat\" is used then\n# auto_join_mxid_localpart
    must also be configured.\n#\n# Defaults to \"public_chat\", meaning that the room
    is joinable by anyone, including\n# federated servers if autocreate_auto_join_rooms_federated
    is true (the default).\n# Uncomment the following to require an invitation to
    join these rooms.\n#\n#autocreate_auto_join_room_preset: private_chat\n\n# The
    local part of the user id which is used to create auto_join_rooms if\n# autocreate_auto_join_rooms
    is true. If this is not provided then the\n# initial user account that registers
    will be used to create the rooms.\n#\n# The user id is also used to invite new
    users to any auto-join rooms which\n# are set to invite-only.\n#\n# It *must*
    be configured if autocreate_auto_join_room_preset is set to\n# \"private_chat\"
    or \"trusted_private_chat\".\n#\n# Note that this must be specified in order for
    new users to be correctly\n# invited to any auto-join rooms which have been set
    to invite-only (either\n# at the time of creation or subsequently).\n#\n# Note
    that, if the room already exists, this user must be joined and\n# have the appropriate
    permissions to invite new members.\n#\n#auto_join_mxid_localpart: system\n\n#
    When auto_join_rooms is specified, setting this flag to false prevents\n# guest
    accounts from being automatically joined to the rooms.\n#\n# Defaults to true.\n#\n#auto_join_rooms_for_guests:
    false\n\n# Whether to inhibit errors raised when registering a new account if
    the user ID\n# already exists. If turned on, that requests to /register/available
    will always\n# show a user ID as available, and Synapse won't raise an error when
    starting\n# a registration with a user ID that already exists. However, Synapse
    will still\n# raise an error if the registration completes and the username conflicts.\n#\n#
    Defaults to false.\n#\n#inhibit_user_in_use_error: true\n\n\n## Metrics ###\n\n#
    Enable collection and rendering of performance metrics\n#\nenable_metrics: true\n\n#
    Enable sentry integration\n# NOTE: While attempts are made to ensure that the
    logs don't contain\n# any sensitive information, this cannot be guaranteed. By
    enabling\n# this option the sentry server may therefore receive sensitive\n# information,
    and it in turn may then diseminate sensitive information\n# through insecure notification
    channels if so configured.\n#\n#sentry:\n#    dsn: \"...\"\n\n# Flags to enable
    Prometheus metrics which are not suitable to be\n# enabled by default, either
    for performance reasons or limited use.\n#\nmetrics_flags:\n    # Publish synapse_federation_known_servers,
    a gauge of the number of\n    # servers this homeserver knows about, including
    itself. May cause\n    # performance problems on large homeservers.\n    #\n    #known_servers:
    true\n\n# Whether or not to report anonymized homeserver usage statistics.\n#\nreport_stats:
    true\n\n# The endpoint to report the anonymized homeserver usage statistics to.\n#
    Defaults to https://matrix.org/report-usage-stats/push\n#\n#report_stats_endpoint:
    https://example.com/report-usage-stats/push\n\n\n## API Configuration ##\n\n#
    Controls for the state that is shared with users who receive an invite\n# to a
    room\n#\nroom_prejoin_state:\n   # By default, the following state event types
    are shared with users who\n   # receive invites to the room:\n   #\n   # - m.room.join_rules\n
    \  # - m.room.canonical_alias\n   # - m.room.avatar\n   # - m.room.encryption\n
    \  # - m.room.name\n   # - m.room.create\n   # - m.room.topic\n   #\n   # Uncomment
    the following to disable these defaults (so that only the event\n   # types listed
    in 'additional_event_types' are shared). Defaults to 'false'.\n   #\n   #disable_default_event_types:
    true\n\n   # Additional state event types to share with users when they are invited\n
    \  # to a room.\n   #\n   # By default, this list is empty (so only the default
    event types are shared).\n   #\n   #additional_event_types:\n   #  - org.example.custom.event.type\n\n#
    We record the IP address of clients used to access the API for various\n# reasons,
    including displaying it to the user in the \"Where you're signed in\"\n# dialog.\n#\n#
    By default, when puppeting another user via the admin API, the client IP\n# address
    is recorded against the user who created the access token (ie, the\n# admin user),
    and *not* the puppeted user.\n#\n# Uncomment the following to also record the
    IP address against the puppeted\n# user. (This also means that the puppeted user
    will count as an \"active\" user\n# for the purpose of monthly active user tracking
    - see 'limit_usage_by_mau' etc\n# above.)\n#\n#track_puppeted_user_ips: true\n\n\n#
    A list of application service config files to use\n#\napp_service_config_files:\n
    \ - \"/data/appservice-registration-irc.yaml\"\n\n# Uncomment to enable tracking
    of application service IP addresses. Implicitly\n# enables MAU tracking for application
    service users.\n#\n#track_appservice_user_ips: true\n\n\n# a secret which is used
    to sign access tokens. If none is specified,\n# the registration_shared_secret
    is used, if one is given; otherwise,\n# a secret key is derived from the signing
    key.\n#\nmacaroon_secret_key: \"xxx\"\n\n# a secret which is used to calculate
    HMACs for form values, to stop\n# falsification of values. Must be specified for
    the User Consent\n# forms to work.\n#\nform_secret: \"xxx\"\n\n## Signing Keys
    ##\n\n# Path to the signing key to sign messages with\n#\nsigning_key_path: \"/data/homeserver.signing.key\"\n\n#
    The keys that the server used to sign messages with but won't use\n# to sign new
    messages.\n#\nold_signing_keys:\n  # For each key, `key` should be the base64-encoded
    public key, and\n  # `expired_ts`should be the time (in milliseconds since the
    unix epoch) that\n  # it was last used.\n  #\n  # It is possible to build an entry
    from an old signing.key file using the\n  # `export_signing_key` script which
    is provided with synapse.\n  #\n  # For example:\n  #\n  #\"ed25519:id\": { key:
    \"base64string\", expired_ts: 123456789123 }\n\n# How long key response published
    by this server is valid for.\n# Used to set the valid_until_ts in /key/v2 APIs.\n#
    Determines how quickly servers will query to check which keys\n# are still valid.\n#\nkey_refresh_interval:
    1d\n\n# The trusted servers to download signing keys from.\n#\n# When we need
    to fetch a signing key, each server is tried in parallel.\n#\n# Normally, the
    connection to the key server is validated via TLS certificates.\n# Additional
    security can be provided by configuring a `verify key`, which\n# will make synapse
    check that the response is signed by that key.\n#\n# This setting supercedes an
    older setting named `perspectives`. The old format\n# is still supported for backwards-compatibility,
    but it is deprecated.\n#\n# 'trusted_key_servers' defaults to matrix.org, but
    using it will generate a\n# warning on start-up. To suppress this warning, set\n#
    'suppress_key_server_warning' to true.\n#\n# Options for each entry in the list
    include:\n#\n#    server_name: the name of the server. required.\n#\n#    verify_keys:
    an optional map from key id to base64-encoded public key.\n#       If specified,
    we will check that the response is signed by at least\n#       one of the given
    keys.\n#\n#    accept_keys_insecurely: a boolean. Normally, if `verify_keys` is
    unset,\n#       and federation_verify_certificates is not `true`, synapse will
    refuse\n#       to start, because this would allow anyone who can spoof DNS responses\n#
    \      to masquerade as the trusted key server. If you know what you are doing\n#
    \      and are sure that your network environment provides a secure connection\n#
    \      to the key server, you can set this to `true` to override this\n#       behaviour.\n#\n#
    An example configuration might look like:\n#\n#trusted_key_servers:\n#  - server_name:
    \"my_trusted_server.example.com\"\n#    verify_keys:\n#      \"ed25519:auto\":
    \"abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr\"\n#  - server_name: \"my_other_trusted_server.example.com\"\n#\ntrusted_key_servers:\n
    \ - server_name: \"matrix.org\"\n\n# Uncomment the following to disable the warning
    that is emitted when the\n# trusted_key_servers include 'matrix.org'. See above.\n#\n#suppress_key_server_warning:
    true\n\n# The signing keys to use when acting as a trusted key server. If not
    specified\n# defaults to the server signing key.\n#\n# Can contain multiple keys,
    one per line.\n#\n#key_server_signing_keys_path: \"key_server_signing_keys.key\"\n\n\n##
    Single sign-on integration ##\n\n# The following settings can be used to make
    Synapse use a single sign-on\n# provider for authentication, instead of its internal
    password database.\n#\n# You will probably also want to set the following options
    to `false` to\n# disable the regular login/registration flows:\n#   * enable_registration\n#
    \  * password_config.enabled\n#\n# You will also want to investigate the settings
    under the \"sso\" configuration\n# section below.\n\n# Enable SAML2 for registration
    and login. Uses pysaml2.\n#\n# At least one of `sp_config` or `config_path` must
    be set in this section to\n# enable SAML login.\n#\n# Once SAML support is enabled,
    a metadata file will be exposed at\n# https://<server>:<port>/_synapse/client/saml2/metadata.xml,
    which you may be able to\n# use to configure your SAML IdP with. Alternatively,
    you can manually configure\n# the IdP to use an ACS location of\n# https://<server>:<port>/_synapse/client/saml2/authn_response.\n#\nsaml2_config:\n
    \ # `sp_config` is the configuration for the pysaml2 Service Provider.\n  # See
    pysaml2 docs for format of config.\n  #\n  # Default values will be used for the
    'entityid' and 'service' settings,\n  # so it is not normally necessary to specify
    them unless you need to\n  # override them.\n  #\n  sp_config:\n    # Point this
    to the IdP's metadata. You must provide either a local\n    # file via the `local`
    attribute or (preferably) a URL via the\n    # `remote` attribute.\n    #\n    #metadata:\n
    \   #  local: [\"saml2/idp.xml\"]\n    #  remote:\n    #    - url: https://our_idp/metadata.xml\n\n
    \   # Allowed clock difference in seconds between the homeserver and IdP.\n    #\n
    \   # Uncomment the below to increase the accepted time difference from 0 to 3
    seconds.\n    #\n    #accepted_time_diff: 3\n\n    # By default, the user has
    to go to our login page first. If you'd like\n    # to allow IdP-initiated login,
    set 'allow_unsolicited: true' in a\n    # 'service.sp' section:\n    #\n    #service:\n
    \   #  sp:\n    #    allow_unsolicited: true\n\n    # The examples below are just
    used to generate our metadata xml, and you\n    # may well not need them, depending
    on your setup. Alternatively you\n    # may need a whole lot more detail - see
    the pysaml2 docs!\n\n    #description: [\"My awesome SP\", \"en\"]\n    #name:
    [\"Test SP\", \"en\"]\n\n    #ui_info:\n    #  display_name:\n    #    - lang:
    en\n    #      text: \"Display Name is the descriptive name of your service.\"\n
    \   #  description:\n    #    - lang: en\n    #      text: \"Description should
    be a short paragraph explaining the purpose of the service.\"\n    #  information_url:\n
    \   #    - lang: en\n    #      text: \"https://example.com/terms-of-service\"\n
    \   #  privacy_statement_url:\n    #    - lang: en\n    #      text: \"https://example.com/privacy-policy\"\n
    \   #  keywords:\n    #    - lang: en\n    #      text: [\"Matrix\", \"Element\"]\n
    \   #  logo:\n    #    - lang: en\n    #      text: \"https://example.com/logo.svg\"\n
    \   #      width: \"200\"\n    #      height: \"80\"\n\n    #organization:\n    #
    \ name: Example com\n    #  display_name:\n    #    - [\"Example co\", \"en\"]\n
    \   #  url: \"http://example.com\"\n\n    #contact_person:\n    #  - given_name:
    Bob\n    #    sur_name: \"the Sysadmin\"\n    #    email_address\": [\"admin@example.com\"]\n
    \   #    contact_type\": technical\n\n  # Instead of putting the config inline
    as above, you can specify a\n  # separate pysaml2 configuration file:\n  #\n  #config_path:
    \"/data/sp_conf.py\"\n\n  # The lifetime of a SAML session. This defines how long
    a user has to\n  # complete the authentication process, if allow_unsolicited is
    unset.\n  # The default is 15 minutes.\n  #\n  #saml_session_lifetime: 5m\n\n
    \ # An external module can be provided here as a custom solution to\n  # mapping
    attributes returned from a saml provider onto a matrix user.\n  #\n  user_mapping_provider:\n
    \   # The custom module's class. Uncomment to use a custom module.\n    #\n    #module:
    mapping_provider.SamlMappingProvider\n\n    # Custom configuration values for
    the module. Below options are\n    # intended for the built-in provider, they
    should be changed if\n    # using a custom module. This section will be passed
    as a Python\n    # dictionary to the module's `parse_config` method.\n    #\n
    \   config:\n      # The SAML attribute (after mapping via the attribute maps)
    to use\n      # to derive the Matrix ID from. 'uid' by default.\n      #\n      #
    Note: This used to be configured by the\n      # saml2_config.mxid_source_attribute
    option. If that is still\n      # defined, its value will be used instead.\n      #\n
    \     #mxid_source_attribute: displayName\n\n      # The mapping system to use
    for mapping the saml attribute onto a\n      # matrix ID.\n      #\n      # Options
    include:\n      #  * 'hexencode' (which maps unpermitted characters to '=xx')\n
    \     #  * 'dotreplace' (which replaces unpermitted characters with\n      #     '.').\n
    \     # The default is 'hexencode'.\n      #\n      # Note: This used to be configured
    by the\n      # saml2_config.mxid_mapping option. If that is still defined, its\n
    \     # value will be used instead.\n      #\n      #mxid_mapping: dotreplace\n\n
    \ # In previous versions of synapse, the mapping from SAML attribute to\n  # MXID
    was always calculated dynamically rather than stored in a\n  # table. For backwards-
    compatibility, we will look for user_ids\n  # matching such a pattern before creating
    a new account.\n  #\n  # This setting controls the SAML attribute which will be
    used for this\n  # backwards-compatibility lookup. Typically it should be 'uid',
    but if\n  # the attribute maps are changed, it may be necessary to change it.\n
    \ #\n  # The default is 'uid'.\n  #\n  #grandfathered_mxid_source_attribute: upn\n\n
    \ # It is possible to configure Synapse to only allow logins if SAML attributes\n
    \ # match particular values. The requirements can be listed under\n  # `attribute_requirements`
    as shown below. All of the listed attributes must\n  # match for the login to
    be permitted.\n  #\n  #attribute_requirements:\n  #  - attribute: userGroup\n
    \ #    value: \"staff\"\n  #  - attribute: department\n  #    value: \"sales\"\n\n
    \ # If the metadata XML contains multiple IdP entities then the `idp_entityid`\n
    \ # option must be set to the entity to redirect users to.\n  #\n  # Most deployments
    only have a single IdP entity and so should omit this\n  # option.\n  #\n  #idp_entityid:
    'https://our_idp/entityid'\n\n\n# List of OpenID Connect (OIDC) / OAuth 2.0 identity
    providers, for registration\n# and login.\n#\n# Options for each entry include:\n#\n#
    \  idp_id: a unique identifier for this identity provider. Used internally\n#
    \      by Synapse; should be a single word such as 'github'.\n#\n#       Note
    that, if this is changed, users authenticating via that provider\n#       will
    no longer be recognised as the same user!\n#\n#       (Use \"oidc\" here if you
    are migrating from an old \"oidc_config\"\n#       configuration.)\n#\n#   idp_name:
    A user-facing name for this identity provider, which is used to\n#       offer
    the user a choice of login mechanisms.\n#\n#   idp_icon: An optional icon for
    this identity provider, which is presented\n#       by clients and Synapse's own
    IdP picker page. If given, must be an\n#       MXC URI of the format mxc://<server-name>/<media-id>.
    (An easy way to\n#       obtain such an MXC URI is to upload an image to an (unencrypted)
    room\n#       and then copy the \"url\" from the source of the event.)\n#\n#   idp_brand:
    An optional brand for this identity provider, allowing clients\n#       to style
    the login flow according to the identity provider in question.\n#       See the
    spec for possible options here.\n#\n#   discover: set to 'false' to disable the
    use of the OIDC discovery mechanism\n#       to discover endpoints. Defaults to
    true.\n#\n#   issuer: Required. The OIDC issuer. Used to validate tokens and (if
    discovery\n#       is enabled) to discover the provider's endpoints.\n#\n#   client_id:
    Required. oauth2 client id to use.\n#\n#   client_secret: oauth2 client secret
    to use. May be omitted if\n#        client_secret_jwt_key is given, or if client_auth_method
    is 'none'.\n#\n#   client_secret_jwt_key: Alternative to client_secret: details
    of a key used\n#      to create a JSON Web Token to be used as an OAuth2 client
    secret. If\n#      given, must be a dictionary with the following properties:\n#\n#
    \         key: a pem-encoded signing key. Must be a suitable key for the\n#              algorithm
    specified. Required unless 'key_file' is given.\n#\n#          key_file: the path
    to file containing a pem-encoded signing key file.\n#              Required unless
    'key' is given.\n#\n#          jwt_header: a dictionary giving properties to include
    in the JWT\n#              header. Must include the key 'alg', giving the algorithm
    used to\n#              sign the JWT, such as \"ES256\", using the JWA identifiers
    in\n#              RFC7518.\n#\n#          jwt_payload: an optional dictionary
    giving properties to include in\n#              the JWT payload. Normally this
    should include an 'iss' key.\n#\n#   client_auth_method: auth method to use when
    exchanging the token. Valid\n#       values are 'client_secret_basic' (default),
    'client_secret_post' and\n#       'none'.\n#\n#   scopes: list of scopes to request.
    This should normally include the \"openid\"\n#       scope. Defaults to [\"openid\"].\n#\n#
    \  authorization_endpoint: the oauth2 authorization endpoint. Required if\n#       provider
    discovery is disabled.\n#\n#   token_endpoint: the oauth2 token endpoint. Required
    if provider discovery is\n#       disabled.\n#\n#   userinfo_endpoint: the OIDC
    userinfo endpoint. Required if discovery is\n#       disabled and the 'openid'
    scope is not requested.\n#\n#   jwks_uri: URI where to fetch the JWKS. Required
    if discovery is disabled and\n#       the 'openid' scope is used.\n#\n#   skip_verification:
    set to 'true' to skip metadata verification. Use this if\n#       you are connecting
    to a provider that is not OpenID Connect compliant.\n#       Defaults to false.
    Avoid this in production.\n#\n#   user_profile_method: Whether to fetch the user
    profile from the userinfo\n#       endpoint, or to rely on the data returned in
    the id_token from the\n#       token_endpoint.\n#\n#       Valid values are: 'auto'
    or 'userinfo_endpoint'.\n#\n#       Defaults to 'auto', which uses the userinfo
    endpoint if 'openid' is\n#       not included in 'scopes'. Set to 'userinfo_endpoint'
    to always use the\n#       userinfo endpoint.\n#\n#   allow_existing_users: set
    to 'true' to allow a user logging in via OIDC to\n#       match a pre-existing
    account instead of failing. This could be used if\n#       switching from password
    logins to OIDC. Defaults to false.\n#\n#   user_mapping_provider: Configuration
    for how attributes returned from a OIDC\n#       provider are mapped onto a matrix
    user. This setting has the following\n#       sub-properties:\n#\n#       module:
    The class name of a custom mapping module. Default is\n#           'synapse.handlers.oidc.JinjaOidcMappingProvider'.\n#
    \          See https://matrix-org.github.io/synapse/latest/sso_mapping_providers.html#openid-mapping-providers\n#
    \          for information on implementing a custom mapping provider.\n#\n#       config:
    Configuration for the mapping provider module. This section will\n#           be
    passed as a Python dictionary to the user mapping provider\n#           module's
    `parse_config` method.\n#\n#           For the default provider, the following
    settings are available:\n#\n#             subject_claim: name of the claim containing
    a unique identifier\n#                 for the user. Defaults to 'sub', which
    OpenID Connect\n#                 compliant providers should provide.\n#\n#             localpart_template:
    Jinja2 template for the localpart of the MXID.\n#                 If this is not
    set, the user will be prompted to choose their\n#                 own username
    (see the documentation for the\n#                 'sso_auth_account_details.html'
    template). This template can\n#                 use the 'localpart_from_email'
    filter.\n#\n#             confirm_localpart: Whether to prompt the user to validate
    (or\n#                 change) the generated localpart (see the documentation
    for the\n#                 'sso_auth_account_details.html' template), instead
    of\n#                 registering the account right away.\n#\n#             display_name_template:
    Jinja2 template for the display name to set\n#                 on first login.
    If unset, no displayname will be set.\n#\n#             email_template: Jinja2
    template for the email address of the user.\n#                 If unset, no email
    address will be added to the account.\n#\n#             extra_attributes: a map
    of Jinja2 templates for extra attributes\n#                 to send back to the
    client during login.\n#                 Note that these are non-standard and clients
    will ignore them\n#                 without modifications.\n#\n#           When
    rendering, the Jinja2 templates are given a 'user' variable,\n#           which
    is set to the claims returned by the UserInfo Endpoint and/or\n#           in
    the ID Token.\n#\n#   It is possible to configure Synapse to only allow logins
    if certain attributes\n#   match particular values in the OIDC userinfo. The requirements
    can be listed under\n#   `attribute_requirements` as shown below. All of the listed
    attributes must\n#   match for the login to be permitted. Additional attributes
    can be added to\n#   userinfo by expanding the `scopes` section of the OIDC config
    to retrieve\n#   additional information from the OIDC provider.\n#\n#   If the
    OIDC claim is a list, then the attribute must match any value in the list.\n#
    \  Otherwise, it must exactly match the value of the claim. Using the example\n#
    \  below, the `family_name` claim MUST be \"Stephensson\", but the `groups`\n#
    \  claim MUST contain \"admin\".\n#\n#   attribute_requirements:\n#     - attribute:
    family_name\n#       value: \"Stephensson\"\n#     - attribute: groups\n#       value:
    \"admin\"\n#\n# See https://matrix-org.github.io/synapse/latest/openid.html\n#
    for information on how to configure these options.\n#\n# For backwards compatibility,
    it is also possible to configure a single OIDC\n# provider via an 'oidc_config'
    setting. This is now deprecated and admins are\n# advised to migrate to the 'oidc_providers'
    format. (When doing that migration,\n# use 'oidc' for the idp_id to ensure that
    existing users continue to be\n# recognised.)\n#\noidc_providers:\n  # Generic
    example\n  #\n  #- idp_id: my_idp\n  #  idp_name: \"My OpenID provider\"\n  #
    \ idp_icon: \"mxc://example.com/mediaid\"\n  #  discover: false\n  #  issuer:
    \"https://accounts.example.com/\"\n  #  client_id: \"provided-by-your-issuer\"\n
    \ #  client_secret: \"provided-by-your-issuer\"\n  #  client_auth_method: client_secret_post\n
    \ #  scopes: [\"openid\", \"profile\"]\n  #  authorization_endpoint: \"https://accounts.example.com/oauth2/auth\"\n
    \ #  token_endpoint: \"https://accounts.example.com/oauth2/token\"\n  #  userinfo_endpoint:
    \"https://accounts.example.com/userinfo\"\n  #  jwks_uri: \"https://accounts.example.com/.well-known/jwks.json\"\n
    \ #  skip_verification: true\n  #  user_mapping_provider:\n  #    config:\n  #
    \     subject_claim: \"id\"\n  #      localpart_template: \"{{ user.login }}\"\n
    \ #      display_name_template: \"{{ user.name }}\"\n  #      email_template:
    \"{{ user.email }}\"\n  #  attribute_requirements:\n  #    - attribute: userGroup\n
    \ #      value: \"synapseUsers\"\n\n\n# Enable Central Authentication Service
    (CAS) for registration and login.\n#\ncas_config:\n  # Uncomment the following
    to enable authorization against a CAS server.\n  # Defaults to false.\n  #\n  #enabled:
    true\n\n  # The URL of the CAS authorization endpoint.\n  #\n  #server_url: \"https://cas-server.com\"\n\n
    \ # The attribute of the CAS response to use as the display name.\n  #\n  # If
    unset, no displayname will be set.\n  #\n  #displayname_attribute: name\n\n  #
    It is possible to configure Synapse to only allow logins if CAS attributes\n  #
    match particular values. All of the keys in the mapping below must exist\n  #
    and the values must match the given value. Alternately if the given value\n  #
    is None then any value is allowed (the attribute just must exist).\n  # All of
    the listed attributes must match for the login to be permitted.\n  #\n  #required_attributes:\n
    \ #  userGroup: \"staff\"\n  #  department: None\n\n\n# Additional settings to
    use with single-sign on systems such as OpenID Connect,\n# SAML2 and CAS.\n#\n#
    Server admins can configure custom templates for pages related to SSO. See\n#
    https://matrix-org.github.io/synapse/latest/templates.html for more information.\n#\nsso:\n
    \   # A list of client URLs which are whitelisted so that the user does not\n
    \   # have to confirm giving access to their account to the URL. Any client\n
    \   # whose URL starts with an entry in the following list will not be subject\n
    \   # to an additional confirmation step after the SSO login is completed.\n    #\n
    \   # WARNING: An entry such as \"https://my.client\" is insecure, because it\n
    \   # will also match \"https://my.client.evil.site\", exposing your users to\n
    \   # phishing attacks from evil.site. To avoid this, include a slash after the\n
    \   # hostname: \"https://my.client/\".\n    #\n    # The login fallback page
    (used by clients that don't natively support the\n    # required login flows)
    is whitelisted in addition to any URLs in this list.\n    #\n    # By default,
    this list contains only the login fallback page.\n    #\n    #client_whitelist:\n
    \   #  - https://riot.im/develop\n    #  - https://my.custom.client/\n\n    #
    Uncomment to keep a user's profile fields in sync with information from\n    #
    the identity provider. Currently only syncing the displayname is\n    # supported.
    Fields are checked on every SSO login, and are updated\n    # if necessary.\n
    \   #\n    # Note that enabling this option will override user profile information,\n
    \   # regardless of whether users have opted-out of syncing that\n    # information
    when first signing in. Defaults to false.\n    #\n    #update_profile_information:
    true\n\n\n# JSON web token integration. The following settings can be used to
    make\n# Synapse JSON web tokens for authentication, instead of its internal\n#
    password database.\n#\n# Each JSON Web Token needs to contain a \"sub\" (subject)
    claim, which is\n# used as the localpart of the mxid.\n#\n# Additionally, the
    expiration time (\"exp\"), not before time (\"nbf\"),\n# and issued at (\"iat\")
    claims are validated if present.\n#\n# Note that this is a non-standard login
    type and client support is\n# expected to be non-existent.\n#\n# See https://matrix-org.github.io/synapse/latest/jwt.html.\n#\n#jwt_config:\n
    \   # Uncomment the following to enable authorization using JSON web\n    # tokens.
    Defaults to false.\n    #\n    #enabled: true\n\n    # This is either the private
    shared secret or the public key used to\n    # decode the contents of the JSON
    web token.\n    #\n    # Required if 'enabled' is true.\n    #\n    #secret: \"provided-by-your-issuer\"\n\n
    \   # The algorithm used to sign the JSON web token.\n    #\n    # Supported algorithms
    are listed at\n    # https://pyjwt.readthedocs.io/en/latest/algorithms.html\n
    \   #\n    # Required if 'enabled' is true.\n    #\n    #algorithm: \"provided-by-your-issuer\"\n\n
    \   # Name of the claim containing a unique identifier for the user.\n    #\n
    \   # Optional, defaults to `sub`.\n    #\n    #subject_claim: \"sub\"\n\n    #
    The issuer to validate the \"iss\" claim against.\n    #\n    # Optional, if provided
    the \"iss\" claim will be required and\n    # validated for all JSON web tokens.\n
    \   #\n    #issuer: \"provided-by-your-issuer\"\n\n    # A list of audiences to
    validate the \"aud\" claim against.\n    #\n    # Optional, if provided the \"aud\"
    claim will be required and\n    # validated for all JSON web tokens.\n    #\n
    \   # Note that if the \"aud\" claim is included in a JSON web token then\n    #
    validation will fail without configuring audiences.\n    #\n    #audiences:\n
    \   #    - \"provided-by-your-issuer\"\n\n\npassword_config:\n   # Uncomment to
    disable password login.\n   # Set to `only_for_reauth` to permit reauthentication
    for users that\n   # have passwords and are already logged in.\n   #\n   #enabled:
    false\n\n   # Uncomment to disable authentication against the local password\n
    \  # database. This is ignored if `enabled` is false, and is only useful\n   #
    if you have other password_providers.\n   #\n   #localdb_enabled: false\n\n   #
    Uncomment and change to a secret random string for extra security.\n   # DO NOT
    CHANGE THIS AFTER INITIAL SETUP!\n   #\n   #pepper: \"EVEN_MORE_SECRET\"\n\n   #
    Define and enforce a password policy. Each parameter is optional.\n   # This is
    an implementation of MSC2000.\n   #\n   policy:\n      # Whether to enforce the
    password policy.\n      # Defaults to 'false'.\n      #\n      #enabled: true\n\n
    \     # Minimum accepted length for a password.\n      # Defaults to 0.\n      #\n
    \     #minimum_length: 8\n\n      # Whether a password must contain at least one
    digit.\n      # Defaults to 'false'.\n      #\n      #require_digit: true\n\n
    \     # Whether a password must contain at least one symbol.\n      # A symbol
    is any character that's not a number or a letter.\n      # Defaults to 'false'.\n
    \     #\n      #require_symbol: true\n\n      # Whether a password must contain
    at least one lowercase letter.\n      # Defaults to 'false'.\n      #\n      #require_lowercase:
    true\n\n      # Whether a password must contain at least one uppercase letter.\n
    \     # Defaults to 'false'.\n      #\n      #require_uppercase: true\n\nui_auth:\n
    \   # The amount of time to allow a user-interactive authentication session\n
    \   # to be active.\n    #\n    # This defaults to 0, meaning the user is queried
    for their credentials\n    # before every action, but this can be overridden to
    allow a single\n    # validation to be re-used.  This weakens the protections
    afforded by\n    # the user-interactive authentication process, by allowing for
    multiple\n    # (and potentially different) operations to use the same validation
    session.\n    #\n    # This is ignored for potentially \"dangerous\" operations
    (including\n    # deactivating an account, modifying an account password, and\n
    \   # adding a 3PID).\n    #\n    # Uncomment below to allow for credential validation
    to last for 15\n    # seconds.\n    #\n    #session_timeout: \"15s\"\n\n\n# Configuration
    for sending emails from Synapse.\n#\n# Server admins can configure custom templates
    for email content. See\n# https://matrix-org.github.io/synapse/latest/templates.html
    for more information.\n#\nemail:\n  # The hostname of the outgoing SMTP server
    to use. Defaults to 'localhost'.\n  #\n  smtp_host: mail.hazenet.org\n\n  # The
    port on the mail server for outgoing SMTP. Defaults to 25.\n  #\n  smtp_port:
    25\n\n  # Username/password for authentication to the SMTP server. By default,
    no\n  # authentication is attempted.\n  #\n  # smtp_user: \"exampleusername\"\n
    \ # smtp_pass: \"examplepassword\"\n\n  # Uncomment the following to require TLS
    transport security for SMTP.\n  # By default, Synapse will connect over plain
    text, and will then switch to\n  # TLS via STARTTLS *if the SMTP server supports
    it*. If this option is set,\n  # Synapse will refuse to connect unless the server
    supports STARTTLS.\n  #\n  require_transport_security: true\n\n  # Uncomment the
    following to disable TLS for SMTP.\n  #\n  # By default, if the server supports
    TLS, it will be used, and the server\n  # must present a certificate that is valid
    for 'smtp_host'. If this option\n  # is set to false, TLS will not be used.\n
    \ #\n  #enable_tls: false\n\n  # notif_from defines the \"From\" address to use
    when sending emails.\n  # It must be set if email sending is enabled.\n  #\n  #
    The placeholder '%(app)s' will be replaced by the application name,\n  # which
    is normally 'app_name' (below), but may be overridden by the\n  # Matrix client
    application.\n  #\n  # Note that the placeholder must be written '%(app)s', including
    the\n  # trailing 's'.\n  #\n  notif_from: \"Your Friendly hazenet.org %(app)s
    Server <noreply@hazenet.org>\"\n\n  # app_name defines the default value for '%(app)s'
    in notif_from and email\n  # subjects. It defaults to 'Matrix'.\n  #\n  app_name:
    Matrix\n\n  # Uncomment the following to enable sending emails for messages that
    the user\n  # has missed. Disabled by default.\n  #\n  enable_notifs: true\n\n
    \ # Uncomment the following to disable automatic subscription to email\n  # notifications
    for new users. Enabled by default.\n  #\n  notif_for_new_users: true\n\n  # Custom
    URL for client links within the email notifications. By default\n  # links will
    be based on \"https://matrix.to\".\n  #\n  # (This setting used to be called riot_base_url;
    the old name is still\n  # supported for backwards-compatibility but is now deprecated.)\n
    \ #\n  client_base_url: \"https://matrix.hazenet.org/\"\n\n  # Configure the time
    that a validation email will expire after sending.\n  # Defaults to 1h.\n  #\n
    \ validation_token_lifetime: 1h\n\n  # The web client location to direct users
    to during an invite. This is passed\n  # to the identity server as the org.matrix.web_client_location
    key. Defaults\n  # to unset, giving no guidance to the identity server.\n  #\n
    \ #invite_client_location: https://element.hazenet.org\n\n  # Subjects to use
    when sending emails from Synapse.\n  #\n  # The placeholder '%(app)s' will be
    replaced with the value of the 'app_name'\n  # setting above, or by a value dictated
    by the Matrix client application.\n  #\n  # If a subject isn't overridden in this
    configuration file, the value used as\n  # its example will be used.\n  #\n  #subjects:\n\n
    \   # Subjects for notification emails.\n    #\n    # On top of the '%(app)s'
    placeholder, these can use the following\n    # placeholders:\n    #\n    #   *
    '%(person)s', which will be replaced by the display name of the user(s)\n    #
    \     that sent the message(s), e.g. \"Alice and Bob\".\n    #   * '%(room)s',
    which will be replaced by the name of the room the\n    #      message(s) have
    been sent to, e.g. \"My super room\".\n    #\n    # See the example provided for
    each setting to see which placeholder can be\n    # used and how to use them.\n
    \   #\n    # Subject to use to notify about one message from one or more user(s)
    in a\n    # room which has a name.\n    #message_from_person_in_room: \"[%(app)s]
    You have a message on %(app)s from %(person)s in the %(room)s room...\"\n    #\n
    \   # Subject to use to notify about one message from one or more user(s) in a\n
    \   # room which doesn't have a name.\n    #message_from_person: \"[%(app)s] You
    have a message on %(app)s from %(person)s...\"\n    #\n    # Subject to use to
    notify about multiple messages from one or more users in\n    # a room which doesn't
    have a name.\n    #messages_from_person: \"[%(app)s] You have messages on %(app)s
    from %(person)s...\"\n    #\n    # Subject to use to notify about multiple messages
    in a room which has a\n    # name.\n    #messages_in_room: \"[%(app)s] You have
    messages on %(app)s in the %(room)s room...\"\n    #\n    # Subject to use to
    notify about multiple messages in multiple rooms.\n    #messages_in_room_and_others:
    \"[%(app)s] You have messages on %(app)s in the %(room)s room and others...\"\n
    \   #\n    # Subject to use to notify about multiple messages from multiple persons
    in\n    # multiple rooms. This is similar to the setting above except it's used
    when\n    # the room in which the notification was triggered has no name.\n    #messages_from_person_and_others:
    \"[%(app)s] You have messages on %(app)s from %(person)s and others...\"\n    #\n
    \   # Subject to use to notify about an invite to a room which has a name.\n    #invite_from_person_to_room:
    \"[%(app)s] %(person)s has invited you to join the %(room)s room on %(app)s...\"\n
    \   #\n    # Subject to use to notify about an invite to a room which doesn't
    have a\n    # name.\n    #invite_from_person: \"[%(app)s] %(person)s has invited
    you to chat on %(app)s...\"\n\n    # Subject for emails related to account administration.\n
    \   #\n    # On top of the '%(app)s' placeholder, these one can use the\n    #
    '%(server_name)s' placeholder, which will be replaced by the value of the\n    #
    'server_name' setting in your Synapse configuration.\n    #\n    # Subject to
    use when sending a password reset email.\n    #password_reset: \"[%(server_name)s]
    Password reset\"\n    #\n    # Subject to use when sending a verification email
    to assert an address's\n    # ownership.\n    #email_validation: \"[%(server_name)s]
    Validate your email\"\n\n\n## Push ##\n\npush:\n  # Clients requesting push notifications
    can either have the body of\n  # the message sent in the notification poke along
    with other details\n  # like the sender, or just the event ID and room ID (`event_id_only`).\n
    \ # If clients choose the former, this option controls whether the\n  # notification
    request includes the content of the event (other details\n  # like the sender
    are still included). For `event_id_only` push, it\n  # has no effect.\n  #\n  #
    For modern android devices the notification content will still appear\n  # because
    it is loaded by the app. iPhone, however will send a\n  # notification saying
    only that a message arrived and who it came from.\n  #\n  # The default value
    is \"true\" to include message details. Uncomment to only\n  # include the event
    ID and room ID in push notification payloads.\n  #\n  #include_content: false\n\n
    \ # When a push notification is received, an unread count is also sent.\n  # This
    number can either be calculated as the number of unread messages\n  # for the
    user, or the number of *rooms* the user has unread messages in.\n  #\n  # The
    default value is \"true\", meaning push clients will see the number of\n  # rooms
    with unread messages in them. Uncomment to instead send the number\n  # of unread
    messages.\n  #\n  #group_unread_count_by_room: false\n\n\n## Rooms ##\n\n# Controls
    whether locally-created rooms should be end-to-end encrypted by\n# default.\n#\n#
    Possible options are \"all\", \"invite\", and \"off\". They are defined as:\n#\n#
    * \"all\": any locally-created room\n# * \"invite\": any room created with the
    \"private_chat\" or \"trusted_private_chat\"\n#             room creation presets\n#
    * \"off\": this option will take no effect\n#\n# The default value is \"off\".\n#\n#
    Note that this option will only affect rooms created after it is set. It\n# will
    also not affect rooms created by other servers.\n#\n#encryption_enabled_by_default_for_room_type:
    invite\n\n# Override the default power levels for rooms created on this server,
    per\n# room creation preset.\n#\n# The appropriate dictionary for the room preset
    will be applied on top\n# of the existing power levels content.\n#\n# Useful if
    you know that your users need special permissions in rooms\n# that they create
    (e.g. to send particular types of state events without\n# needing an elevated
    power level).  This takes the same shape as the\n# `power_level_content_override`
    parameter in the /createRoom API, but\n# is applied before that parameter.\n#\n#
    Valid keys are some or all of `private_chat`, `trusted_private_chat`\n# and `public_chat`.
    Inside each of those should be any of the\n# properties allowed in `power_level_content_override`
    in the\n# /createRoom API. If any property is missing, its default value will\n#
    continue to be used. If any property is present, it will overwrite\n# the existing
    default completely (so if the `events` property exists,\n# the default event power
    levels will be ignored).\n#\n#default_power_level_content_override:\n#    private_chat:\n#
    \       \"events\":  \n#            \"com.example.myeventtype\" : 0\n#            \"m.room.avatar\":
    50\n#            \"m.room.canonical_alias\": 50\n#            \"m.room.encryption\":
    100\n#            \"m.room.history_visibility\": 100\n#            \"m.room.name\":
    50\n#            \"m.room.power_levels\": 100\n#            \"m.room.server_acl\":
    100\n#            \"m.room.tombstone\": 100\n#        \"events_default\": 1\n\n\n\n#
    User Directory configuration\n#\nuser_directory:\n    # Defines whether users
    can search the user directory. If false then\n    # empty responses are returned
    to all queries. Defaults to true.\n    #\n    # Uncomment to disable the user
    directory.\n    #\n    enabled: true\n\n    # Defines whether to search all users
    visible to your HS when searching\n    # the user directory. If false, search
    results will only contain users\n    # visible in public rooms and users sharing
    a room with the requester.\n    # Defaults to false.\n    #\n    # NB. If you
    set this to true, and the last time the user_directory search\n    # indexes were
    (re)built was before Synapse 1.44, you'll have to\n    # rebuild the indexes in
    order to search through all known users.\n    # These indexes are built the first
    time Synapse starts; admins can\n    # manually trigger a rebuild via API following
    the instructions at\n    #     https://matrix-org.github.io/synapse/latest/usage/administration/admin_api/background_updates.html#run\n
    \   #   \n    # Uncomment to return search results containing all known users,
    even if that\n    # user does not share a room with the requester.\n    #\n    search_all_users:
    true\n\n    # Defines whether to prefer local users in search query results.\n
    \   # If True, local users are more likely to appear above remote users\n    #
    when searching the user directory. Defaults to false.\n    #\n    # Uncomment
    to prefer local over remote users in user directory search\n    # results.\n    #\n
    \   prefer_local_users: true\n\n\n# User Consent configuration\n#\n# for detailed
    instructions, see\n# https://matrix-org.github.io/synapse/latest/consent_tracking.html\n#\n#
    Parts of this section are required if enabling the 'consent' resource under\n#
    'listeners', in particular 'template_dir' and 'version'.\n#\n# 'template_dir'
    gives the location of the templates for the HTML forms.\n# This directory should
    contain one subdirectory per language (eg, 'en', 'fr'),\n# and each language directory
    should contain the policy document (named as\n# '<version>.html') and a success
    page (success.html).\n#\n# 'version' specifies the 'current' version of the policy
    document. It defines\n# the version to be served by the consent resource if there
    is no 'v'\n# parameter.\n#\n# 'server_notice_content', if enabled, will send a
    user a \"Server Notice\"\n# asking them to consent to the privacy policy. The
    'server_notices' section\n# must also be configured for this to work. Notices
    will *not* be sent to\n# guest users unless 'send_server_notice_to_guests' is
    set to true.\n#\n# 'block_events_error', if set, will block any attempts to send
    events\n# until the user consents to the privacy policy. The value of the setting
    is\n# used as the text of the error.\n#\n# 'require_at_registration', if enabled,
    will add a step to the registration\n# process, similar to how captcha works.
    Users will be required to accept the\n# policy before their account is created.\n#\n#
    'policy_name' is the display name of the policy users will see when registering\n#
    for an account. Has no effect unless `require_at_registration` is enabled.\n#
    Defaults to \"Privacy Policy\".\n#\n# user_consent:\n#   template_dir: res/templates/privacy\n#
    \  version: 1.0\n#   server_notice_content:\n#     msgtype: m.text\n#     body:
    >-\n#       Hello and welcome to the hazenet.org Matrix-homeserver!\n#       This
    is the System Alerts room. We'll use it to send you important notices about maintenance
    or new features landing on the hazenet.org homeserver.\n#       To continue using
    this homeserver you must review and agree to the\n#       terms and conditions
    at %(consent_uri)s\n#   send_server_notice_to_guests: true\n#   block_events_error:
    >-\n#     To continue using this homeserver you must review and agree to the\n#
    \    terms and conditions at %(consent_uri)s\n#   require_at_registration: true\n#
    \  policy_name: Privacy Policy\n\n\n# Settings for local room and user statistics
    collection. See\n# https://matrix-org.github.io/synapse/latest/room_and_user_statistics.html.\n#\nstats:\n
    \ # Uncomment the following to disable room and user statistics. Note that doing\n
    \ # so may cause certain features (such as the room directory) not to work\n  #
    correctly.\n  #\n  enabled: true\n\n\n# Server Notices room configuration\n#\n#
    Uncomment this section to enable a room which can be used to send notices\n# from
    the server to users. It is a special room which cannot be left; notices\n# come
    from a special \"notices\" user id.\n#\n# If you uncomment this section, you *must*
    define the system_mxid_localpart\n# setting, which defines the id of the user
    which will be used to send the\n# notices.\n#\n# It's also possible to override
    the room name, the display name of the\n# \"notices\" user, and the avatar for
    the user.\n#\nserver_notices:\n  system_mxid_localpart: notices\n  system_mxid_display_name:
    \"Server Notices\"\n  system_mxid_avatar_url: \"mxc://hazenet.org/83c0eed9ea5cf72417cc20b5e3b5fb01aa0c3967\"\n
    \ room_name: \"Server Notices\"\n\n\n\n# Uncomment to disable searching the public
    room list. When disabled\n# blocks searching local and remote room lists for local
    and remote\n# users by always returning an empty list for all queries.\n#\n#enable_room_list_search:
    false\n\n# The `alias_creation` option controls who's allowed to create aliases\n#
    on this server.\n#\n# The format of this option is a list of rules that contain
    globs that\n# match against user_id, room_id and the new alias (fully qualified
    with\n# server name). The action in the first rule that matches is taken,\n# which
    can currently either be \"allow\" or \"deny\".\n#\n# Missing user_id/room_id/alias
    fields default to \"*\".\n#\n# If no rules match the request is denied. An empty
    list means no one\n# can create aliases.\n#\n# Options for the rules include:\n#\n#
    \  user_id: Matches against the creator of the alias\n#   alias: Matches against
    the alias being created\n#   room_id: Matches against the room ID the alias is
    being pointed at\n#   action: Whether to \"allow\" or \"deny\" the request if
    the rule matches\n#\n# The default is:\n#\n#alias_creation_rules:\n#  - user_id:
    \"*\"\n#    alias: \"*\"\n#    room_id: \"*\"\n#    action: allow\n\n# The `room_list_publication_rules`
    option controls who can publish and\n# which rooms can be published in the public
    room list.\n#\n# The format of this option is the same as that for\n# `alias_creation_rules`.\n#\n#
    If the room has one or more aliases associated with it, only one of\n# the aliases
    needs to match the alias rule. If there are no aliases\n# then only rules with
    `alias: *` match.\n#\n# If no rules match the request is denied. An empty list
    means no one\n# can publish rooms.\n#\n# Options for the rules include:\n#\n#
    \  user_id: Matches against the creator of the alias\n#   room_id: Matches against
    the room ID being published\n#   alias: Matches against any current local or canonical
    aliases\n#            associated with the room\n#   action: Whether to \"allow\"
    or \"deny\" the request if the rule matches\n#\n# The default is:\n#\n#room_list_publication_rules:\n#
    \ - user_id: \"*\"\n#    alias: \"*\"\n#    room_id: \"*\"\n#    action: allow\n\n\n##
    Opentracing ##\n\n# These settings enable opentracing, which implements distributed
    tracing.\n# This allows you to observe the causal chains of events across servers\n#
    including requests, key lookups etc., across any server running\n# synapse or
    any other other services which supports opentracing\n# (specifically those implemented
    with Jaeger).\n#\nopentracing:\n    # tracing is disabled by default. Uncomment
    the following line to enable it.\n    #\n    #enabled: true\n\n    # The list
    of homeservers we wish to send and receive span contexts and span baggage.\n    #
    See https://matrix-org.github.io/synapse/latest/opentracing.html.\n    #\n    #
    This is a list of regexes which are matched against the server_name of the\n    #
    homeserver.\n    #\n    # By default, it is empty, so no servers are matched.\n
    \   #\n    #homeserver_whitelist:\n    #  - \".*\"\n\n    # A list of the matrix
    IDs of users whose requests will always be traced,\n    # even if the tracing
    system would otherwise drop the traces due to\n    # probabilistic sampling.\n
    \   #\n    # By default, the list is empty.\n    #\n    #force_tracing_for_users:\n
    \   #  - \"@user1:server_name\"\n    #  - \"@user2:server_name\"\n\n    # Jaeger
    can be configured to sample traces at different rates.\n    # All configuration
    options provided by Jaeger can be set here.\n    # Jaeger's configuration is mostly
    related to trace sampling which\n    # is documented here:\n    # https://www.jaegertracing.io/docs/latest/sampling/.\n
    \   #\n    #jaeger_config:\n    #  sampler:\n    #    type: const\n    #    param:
    1\n    #  logging:\n    #    false\n\n\n## Workers ##\n\nworker_app: synapse.app.homeserver\n#worker_name:
    synapse\n\n#notify_appservices_from_worker: worker_name\nstart_pushers: false\n#update_user_directory_from_worker:
    worker_name\n\n# Disables sending of outbound federation transactions on the main
    process.\n# Uncomment if using a federation sender worker.\n#\nsend_federation:
    false\n\n# It is possible to run multiple federation sender workers, in which
    case the\n# work is balanced across them.\n#\n# This configuration must be shared
    between all federation sender workers, and if\n# changed all federation sender
    workers must be stopped at the same time and then\n# started, to ensure that all
    instances are running with the same config (otherwise\n# events may be dropped).\n#\nfederation_sender_instances:\n
    \ - federation_sender1\n  - federation_sender2\n  - federation_sender3\n\n# When
    using workers this should be a map from `worker_name` to the\n# HTTP replication
    listener of the worker, if configured.\n#\n#instance_map:\n#  worker1:\n#    host:
    localhost\n#    port: 8034\ninstance_map:\n  generic_worker1:\n    host: generic-worker-svc-1\n
    \   port: 9094\n  generic_worker2:\n    host: generic-worker-svc-2\n    port:
    9094\n  generic_worker3:\n    host: generic-worker-svc-3\n    port: 9094\n  generic_worker4:\n
    \   host: generic-worker-svc-4\n    port: 9094\n  additional1:\n    host: additional1-svc\n
    \   port: 9094\n  #presence:\n  #  host: presence-svc\n  #  port: 9100\n\n# Experimental:
    When using workers you can define which workers should\n# handle event persistence
    and typing notifications. Any worker\n# specified here must also be in the `instance_map`.\n#\n#stream_writers:\n#
    \ events: worker1\n#  typing: worker1\nstream_writers:\n  events:\n    - generic_worker1\n
    \   - generic_worker2\n    - generic_worker3\n    - generic_worker4\n  typing:\n
    \   - additional1\n  to_device:\n    - additional1\n  account_data:\n    - additional1\n
    \ #presence:\n  #  - presence\n\n# The worker that is used to run background tasks
    (e.g. cleaning up expired\n# data). If not provided this defaults to the main
    process.\n#\n#run_background_tasks_on: background_worker\n\n# A shared secret
    used by the replication APIs to authenticate HTTP requests\n# from workers.\n#\n#
    By default this is unused and traffic is not authenticated.\n#\n#worker_replication_secret:
    \"\"\n\n\n# Configuration for Redis when using workers. This *must* be enabled
    when\n# using workers (unless using old style direct TCP configuration).\n#\nredis:\n
    \ # Uncomment the below to enable Redis support.\n  #\n  enabled: true\n\n  #
    Optional host and port to use to connect to redis. Defaults to\n  # localhost
    and 6379\n  #\n  host: redis-svc\n  #port: 6379\n\n  # Optional password if configured
    on the Redis instance\n  #\n  #password: <secret_password>\n\n\n## Background
    Updates ##\n\n# Background updates are database updates that are run in the background
    in batches.\n# The duration, minimum batch size, default batch size, whether to
    sleep between batches and if so, how long to\n# sleep can all be configured. This
    is helpful to speed up or slow down the updates.\n#\nbackground_updates:\n    #
    How long in milliseconds to run a batch of background updates for. Defaults to
    100. Uncomment and set\n    # a time to change the default.\n    #\n    #background_update_duration_ms:
    500\n\n    # Whether to sleep between updates. Defaults to True. Uncomment to
    change the default.\n    #\n    #sleep_enabled: false\n\n    # If sleeping between
    updates, how long in milliseconds to sleep for. Defaults to 1000. Uncomment\n
    \   # and set a duration to change the default.\n    #\n    #sleep_duration_ms:
    300\n\n    # Minimum size a batch of background updates can be. Must be greater
    than 0. Defaults to 1. Uncomment and\n    # set a size to change the default.\n
    \   #\n    #min_batch_size: 10\n\n    # The batch size to use for the first iteration
    of a new background update. The default is 100.\n    # Uncomment and set a size
    to change the default.\n    #\n    #default_batch_size: 50\n\n\nexperimental_features:\n
    \ msc2285_enabled: false\n"
  log.yaml: |
    # Log configuration for Synapse.
    #
    # This is a YAML file containing a standard Python logging configuration
    # dictionary. See [1] for details on the valid settings.
    #
    # Synapse also supports structured logging for machine readable logs which can
    # be ingested by ELK stacks. See [2] for details.
    #
    # [1]: https://docs.python.org/3.7/library/logging.config.html#configuration-dictionary-schema
    # [2]: https://matrix-org.github.io/synapse/latest/structured_logging.html

    version: 1

    formatters:
        precise:
            format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'

    handlers:
        file:
            class: logging.handlers.TimedRotatingFileHandler
            formatter: precise
            filename: /data/homeserver.log
            when: midnight
            backupCount: 2  # Does not include the current log file.
            encoding: utf8

        # Default to buffering writes to log file for efficiency.
        # WARNING/ERROR logs will still be flushed immediately, but there will be a
        # delay (of up to `period` seconds, or until the buffer is full with
        # `capacity` messages) before INFO/DEBUG logs get written.
        buffer:
            class: synapse.logging.handlers.PeriodicallyFlushingMemoryHandler
            target: file

            # The capacity is the maximum number of log lines that are buffered
            # before being written to disk. Increasing this will lead to better
            # performance, at the expensive of it taking longer for log lines to
            # be written to disk.
            # This parameter is required.
            capacity: 10

            # Logs with a level at or above the flush level will cause the buffer to
            # be flushed immediately.
            # Default value: 40 (ERROR)
            # Other values: 50 (CRITICAL), 30 (WARNING), 20 (INFO), 10 (DEBUG)
            flushLevel: 30  # Flush immediately for WARNING logs and higher

            # The period of time, in seconds, between forced flushes.
            # Messages will not be delayed for longer than this time.
            # Default value: 5 seconds
            period: 5

        # A handler that writes logs to stderr. Unused by default, but can be used
        # instead of "buffer" and "file" in the logger handlers.
        console:
            class: logging.StreamHandler
            formatter: precise

    loggers:
        synapse.storage.SQL:
            # beware: increasing this to DEBUG will make synapse log sensitive
            # information such as access tokens.
            level: WARN

        synapse.state.metrics:
            level: INFO

    root:
        level: WARN

        # Write logs to the `buffer` handler, which will buffer them together in memory,
        # then write them to a file.
        #
        # Replace "buffer" with "console" to log to stderr instead. (Note that you'll
        # also need to update the configuration for the `twisted` logger above, in
        # this case.)
        #
        handlers: [buffer]

    disable_existing_loggers: false
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: synapse-config
